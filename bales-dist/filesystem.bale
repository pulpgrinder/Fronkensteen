{"filesystem/LICENSE-filesystem.md":"ZmlsZXN5c3RlbS1leHRlbnNpb25zLmpzIGlzIGNvcHlyaWdodCAyMDE5IGFuZCAyMDIwIGJ5IEFudGhvbnkgVy4gSHVyc2guCmZpbGV0eXBlcy1leHRlbnNpb25zLmpzIGlzIGNvcHlyaWdodCAyMDE5IGJ5IEFudGhvbnkgVy4gSHVyc2guCgpCb3RoIG9mIHRoZXNlIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgc2FtZSBNSVQgTGljZW5zZSBhcyBGcm9ua2Vuc3RlZW4gYXMgYSB3aG9sZS4KCmZpbGV0eXBlcy5qcyBpcyBjb3B5cmlnaHQgMjAxNCBieSBTdHJldGNociwgSW5jLiwKClRoZSBNSVQgTGljZW5zZSAoTUlUKQoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQpvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAppbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzCnRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLApGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUKQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgpMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLApPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRQpTT0ZUV0FSRS4K","filesystem/filetypes.js":"","filesystem/filesystem-extensions.js":"","filesystem/filetypes-extensions.js":"Ly8gQml3YVNjaGVtZSBpbnRlcmZhY2UgZm9yIHRoZSBGaWxlVHlwZXMgU3RyZXRjaHIgbGlicmFyeS4KLy8gQ29weXJpZ2h0IDIwMTkgYnkgQW50aG9ueSBXLiBIdXJzaAovLyBNSVQgTGljZW5zZS4KCkJpd2FTY2hlbWUuZGVmaW5lX2xpYmZ1bmMoIm1pbWUtdHlwZSIgLDEsIDEsIGZ1bmN0aW9uKGFyKXsKICAvLyBHZXQgbWltZSB0eXBlIGZvciBmaWxlIG5hbWUuCiAgcmV0dXJuIFN0cmV0Y2hyLkZpbGV0eXBlcy5taW1lRm9yKGFyWzBdLnNsaWNlKChhclswXS5sYXN0SW5kZXhPZigiLiIpIC0gMSA+Pj4gMCkgKyAyKSk7Cn0pOwo=","filesystem/$$BALE-VERSION$$":"0.1","filesystem/$$VERSION$$":"0.0","filesystem/$$MANDATORY$$":true,"filesystem/$$LOAD_BALE$$":true,"filesystem/$$FILEMANIFEST$$":["filesystem/LICENSE-filesystem.md","filesystem/filetypes.js","filesystem/filesystem-extensions.js","filesystem/filetypes-extensions.js","filesystem/$$BALE-VERSION$$","filesystem/$$VERSION$$","filesystem/$$MANDATORY$$","filesystem/$$LOAD_BALE$$"]}