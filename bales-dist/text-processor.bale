{"text-processor/LICENSE-text-processor.md":"dGV4dC1wcm9jZXNzb3ItZXh0ZW5zaW9ucy5qcyBhbmQgdGV4dC1wcm9jZXNzb3Iuc2NtIGFyZSBjb3B5cmlnaHQgMjAxOC0yMDIwIGJ5IEFudGhvbnkgVy4gSHVyc2gsIGFuZCBhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHNhbWUgTUlUIExpY2Vuc2UgYXMgRnJvbmtlbnN0ZWVuIGFzIGEgd2hvbGUuCg==","text-processor/text-processor-extensions.js":"","text-processor/text-processor.scm":"OyB0ZXh0LXByb2Nlc3Nvci5zY20KOyBDb3B5cmlnaHQgMjAyMCBieSBBbnRob255IFcuIEh1cnNoCjsgTUlUIGxpY2Vuc2UuCgooZGVmaW5lICh0cnVzdGVkLXRleHQtcHJvY2Vzc29yIHRleHQpCiAgICAgIChwcm9jZXNzLWFsaWdubWVudAogICAgICAgICh0cnVzdGVkLW1hcmtkb3duCiAgICAgICAgICAocHJvY2Vzcy1wb2V0cnkKICAgICAgICAgICAgKHJlbW92ZS1jb21tZW50cyB0ZXh0KSkpKSkKCgoKKGRlZmluZSAodW50cnVzdGVkLXRleHQtcHJvY2Vzc29yIHRleHQpCiAgKHByb2Nlc3MtYWxpZ25tbWVudAogIChtYXJrZG93bgogICAgKHByb2Nlc3MtcG9ldHJ5CiAgICAgIChyZW1vdmUtY29tbWVudHMgdGV4dCkpKSkpCg==","text-processor/$$BALE-VERSION$$":"0.1","text-processor/$$VERSION$$":"0.0","text-processor/$$MANDATORY$$":false,"text-processor/$$LOAD_BALE$$":true,"text-processor/$$FILEMANIFEST$$":["text-processor/LICENSE-text-processor.md","text-processor/text-processor-extensions.js","text-processor/text-processor.scm","text-processor/$$BALE-VERSION$$","text-processor/$$VERSION$$","text-processor/$$MANDATORY$$","text-processor/$$LOAD_BALE$$"]}