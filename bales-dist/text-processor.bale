{"text-processor/LICENSE-text-processor.md":"YHRleHQtcHJvY2Vzc29yLWV4dGVuc2lvbnMuanNgIGFuZCBgdGV4dC1wcm9jZXNzb3Iuc2NtYCBhcmUgY29weXJpZ2h0IDIwMTgtMjAyMCBieSBBbnRob255IFcuIEh1cnNoLCBhbmQgYXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBzYW1lIE1JVCBMaWNlbnNlIGFzIEZyb25rZW5zdGVlbiBhcyBhIHdob2xlLgo=","text-processor/text-processor-extensions.js":"","text-processor/text-processor.scm":"OyB0ZXh0LXByb2Nlc3Nvci5zY20KOyBDb3B5cmlnaHQgMjAyMCBieSBBbnRob255IFcuIEh1cnNoCjsgTUlUIGxpY2Vuc2UuCgooZGVmaW5lICh0cnVzdGVkLXRleHQtcHJvY2Vzc29yIHRleHQpCiAgICAgIChwcm9jZXNzLWFsaWdubWVudAogICAgICAgICh0cnVzdGVkLW1hcmtkb3duCiAgICAgICAgICAocHJvY2Vzcy1wb2V0cnkKICAgICAgICAgICAgKHJlbW92ZS1jb21tZW50cyB0ZXh0KSkpKSkKCgoKKGRlZmluZSAodW50cnVzdGVkLXRleHQtcHJvY2Vzc29yIHRleHQpCiAgKHByb2Nlc3MtYWxpZ25tbWVudAogIChtYXJrZG93bgogICAgKHByb2Nlc3MtcG9ldHJ5CiAgICAgIChyZW1vdmUtY29tbWVudHMgdGV4dCkpKSkpCgooZGVmaW5lICh3aWtpbGlua19jbGljayB0YXJnZXQgbGluay10ZXh0KQogIDsgdGFyZ2V0IGlzIHRoZSBqUXVlcnkgb2JqZWN0IHRoYXQgd2FzIGNsaWNrZWQuIE5vdCB1c2VkIGluIHRoaXMgZGVmYXVsdCBjb2RlLCBidXQgaXQncyB0aGVyZSBpZiB5b3UgbmVlZCBpdC4KICAoYWxlcnQgKDw8ICJZb3UgY2xpY2tlZCB0aGUgd2lraWxpbmsgJyIgbGluay10ZXh0ICAiJy4gWW91IGNhbiBhZGQgeW91ciBvd24gaGFuZGxlciBmb3Igd2lraWxpbmtzIGJ5IHJlZGVmaW5pbmcgdGhlICh3aWtpbGlua19jbGljayB0YXJnZXQgbGluay10ZXh0KSBwcm9jZWR1cmUgaW4geW91ciBhcHAgY29kZS4gU2VlIHRleHQtcHJvY2Vzc29yL3RleHQtcHJvY2Vzc29yLnNjbSBmb3IgdGhlIGRlZmluaXRpb24gb2YgdGhpcyBkZWZhdWx0IHByb2NlZHVyZS4iKSkpCgooZGVmaW5lIChoYXNodGFnX2NsaWNrIHRhcmdldCBsaW5rLXRleHQpCiAgOyB0YXJnZXQgaXMgdGhlIGpRdWVyeSBvYmplY3QgdGhhdCB3YXMgY2xpY2tlZC4gTm90IHVzZWQgaW4gdGhpcyBkZWZhdWx0IGNvZGUsIGJ1dCBpdCdzIHRoZXJlIGlmIHlvdSBuZWVkIGl0LgogIChhbGVydCAoPDwgIllvdSBjbGlja2VkIHRoZSBoYXNodGFnICciIGxpbmstdGV4dCAgIicuIFlvdSBjYW4gYWRkIHlvdXIgb3duIGhhbmRsZXIgZm9yIGhhc2h0YWdzIGJ5IHJlZGVmaW5pbmcgdGhlIChoYXNodGFnX2NsaWNrIHRhcmdldCBsaW5rLXRleHQpIHByb2NlZHVyZSBpbiB5b3VyIGFwcCBjb2RlLiBTZWUgdGV4dC1wcm9jZXNzb3IvdGV4dC1wcm9jZXNzb3Iuc2NtIGZvciB0aGUgZGVmaW5pdGlvbiBvZiB0aGlzIGRlZmF1bHQgcHJvY2VkdXJlLiIpKSkKCihkZWZpbmUgKGV4dGVybmFsLWxpbmtfY2xpY2sgdGFyZ2V0IHVybCkKICA7IHRhcmdldCBpcyB0aGUgalF1ZXJ5IG9iamVjdCB0aGF0IHdhcyBjbGlja2VkLiBOb3QgdXNlZCBpbiB0aGlzIGRlZmF1bHQgY29kZSwgYnV0IGl0J3MgdGhlcmUgaWYgeW91IG5lZWQgaXQuCiAgKG9wZW4tdXJsIHVybCkKICA7IElmIHlvdSByZWFsbHkgd2FudCB0byBuYXZpZ2F0ZSB0byBleHRlcm5hbCBsaW5rcyBpbiB0aGUgbWFpbiB3aW5kb3cgKGFuZCBsb3NlIGFwcCBzdGF0ZSk6CiAgOyAobmF2aWdhdGUtdXJsIHVybCkKCiAgKQo=","text-processor/$$BALE-VERSION$$":"0.1","text-processor/$$VERSION$$":"0.0","text-processor/$$MANDATORY$$":false,"text-processor/$$LOAD_BALE$$":true,"text-processor/$$FILEMANIFEST$$":["text-processor/LICENSE-text-processor.md","text-processor/text-processor-extensions.js","text-processor/text-processor.scm","text-processor/$$BALE-VERSION$$","text-processor/$$VERSION$$","text-processor/$$MANDATORY$$","text-processor/$$LOAD_BALE$$"]}