{"string/LICENSE-string.md":"c3RyaW5nLXV0aWxpdGllcy5zY20gYW5kIHN0cmluZy1leHRlbnNpb25zLmpzIGFyZSBjb3B5cmlnaHQgMjAxOC0yMDIwIGJ5IEFudGhvbnkgVy4gSHVyc2gsIGFuZCBhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBzYW1lIE1JVCBsaWNlbnNlIGFzIEZyb25rZW5zdGVlbiBhcyBhIHdob2xlLgo=","string/string-extensions.js":"","string/string-utilities.scm":"OyBzdHJpbmctdXRpbGl0aWVzLnNjbQo7IENvcHlyaWdodCAyMDE4LTIwMjAgYnkgQW50aG9ueSBXLiBIdXJzaAo7IE1JVCBsaWNlbnNlLgoKCjsgUHJvY2VkdXJlcyBmb3IgZ2VuZXJhdGluZyBNb2Rlcm4gTGFuZ3VhZ2UgQXNzb2NpYXRpb24gKE1MQSkgb3V0bGluZSBoZWFkaW5ncy4KCgooZGVmaW5lIG1sYS1sZXZlbC1jb3VudGVyIChtYWtlLXZlY3RvciA3IDApKSA7IEtlZXBzIHRyYWNrIG9mIHRoZSBjdXJyZW50IGhlYWRpbmcgY291bnRlcnMgZm9yIGVhY2ggbGV2ZWwuCgooZGVmaW5lIChyZXNldC1tbGEtbGV2ZWwtY291bnRlcikgOyBSZXNldHMgdGhlIG51bWJlcmluZyBsZXZlbCBmb3IgYW4gTUxBIG91dGxpbmUuCiAgKHNldCEgbWxhLWxldmVsLWNvdW50ZXIgKG1ha2UtdmVjdG9yIDcgMCkpKQoKCihkZWZpbmUgKHJlc2V0LWxvd2VyLWxldmVscyBjdXJyZW50KSA7IFJlc2V0cyBhbGwgbGV2ZWxzIGJlbG93IHRoZSBjdXJyZW50IGxldmVsIGZvciBhbiBNTEEgb3V0bGluZS4KICAoaWYgKGVxdj8gY3VycmVudCAodmVjdG9yLWxlbmd0aCBtbGEtbGV2ZWwtY291bnRlcikpCiAgICAjdAogICAgKGJlZ2luCiAgICAgICh2ZWN0b3Itc2V0ISBtbGEtbGV2ZWwtY291bnRlciBjdXJyZW50IDApCiAgICAgIChyZXNldC1sb3dlci1sZXZlbHMgKCsgY3VycmVudCAxKSkpKSkKCihkZWZpbmUgKG1sYS1oZWFkaW5nLXN0cmluZyBsZXZlbCBpcy12aXNpYmxlPykgOyBFdmFsdWF0ZXMgdG8gdGhlIGNvcnJlY3QgTUxBIG91dGxpbmUgbnVtYmVyIGZvciB0aGUgZ2l2ZW4gbGV2ZWwuIEluY3JlbWVudHMgY291bnRzIGFzIHJlcXVpcmVkLgogIChpZiAoZXF2PyBpcy12aXNpYmxlPyAiZmFsc2UiKQogICAgIi0iCiAgICAoYmVnaW4KICAgICAgKHJlc2V0LWxvd2VyLWxldmVscyAoKyBsZXZlbCAxKSkKICAgICAgKGxldCAoKGhlYWRpbmctY291bnQgKCsgMSAodmVjdG9yLXJlZiBtbGEtbGV2ZWwtY291bnRlciBsZXZlbCkpKSkKICAgICAgICAodmVjdG9yLXNldCEgbWxhLWxldmVsLWNvdW50ZXIgbGV2ZWwgaGVhZGluZy1jb3VudCkKICAgICAgICAoY29uZCAoKGVxdj8gbGV2ZWwgMCkgKHN0cmluZy1hcHBlbmQgKGNvbnZlcnQtcm9tYW4gaGVhZGluZy1jb3VudCAjdCkgIi4iKSkKICAgICAgICAgICAgKChlcXY/IGxldmVsIDEpIChzdHJpbmctYXBwZW5kICh1cHBlci1jYXNlLWxldHRlci1lcXVpdmFsZW50IGhlYWRpbmctY291bnQpICIuIikpCiAgICAgICAgICAgICgoZXF2PyBsZXZlbCAyKSAoc3RyaW5nLWFwcGVuZCAobnVtYmVyLT5zdHJpbmcgaGVhZGluZy1jb3VudCkgIi4iKSkKICAgICAgICAgICAgKChlcXY/IGxldmVsIDMpIChzdHJpbmctYXBwZW5kIChsb3dlci1jYXNlLWxldHRlci1lcXVpdmFsZW50IGhlYWRpbmctY291bnQpICIuIikpCiAgICAgICAgICAgICgoZXF2PyBsZXZlbCA0KSAoc3RyaW5nLWFwcGVuZCAoY29udmVydC1yb21hbiBoZWFkaW5nLWNvdW50ICNmKSAiLiIpKQogICAgICAgICAgICAoKGVxdj8gbGV2ZWwgNSkgKHN0cmluZy1hcHBlbmQgIigiIChudW1iZXItPnN0cmluZyBoZWFkaW5nLWNvdW50KSAiKSIpKQogICAgICAgICAgICAoI3QgKHN0cmluZy1hcHBlbmQgIigiIChsb3dlci1jYXNlLWxldHRlci1lcXVpdmFsZW50IGhlYWRpbmctY291bnQpICIpIikpKSkpKSkKCjsgUm9tYW4gbnVtZXJhbHMuCgooZGVmaW5lIChjb252ZXJ0LXJvbWFuIG51bWJlciB1cHBlci1jYXNlKSA7IENvbnZlcnRzIGEgbnVtYmVyIHRvIGEgUm9tYW4gbnVtZXJhbCAoZWl0aGVyIHVwcHBlci0gb3IgbG93ZXItY2FzZSwgYWNjb3JkaW5nIHRvIHRoZSB1cHBlci1jYXNlIHBhcmFtZXRlcikuIFZhbGlkIHVwIHRvIDM5OTkgKE1NTUNNWENJWCkuCiAgIChpZiAoPiBudW1iZXIgMzk5OSkKICAgICAgKDw8ICJjb252ZXJ0LXJvbWFuOiBhcmd1bWVudCBvdXQgb2YgcmFuZ2UgLT4gIiAobnVtYmVyLT5zdHJpbmcgbnVtYmVyKSkKICAgKGNvbnZlcnQtcm9tYW4taGVscGVyIG51bWJlciB1cHBlci1jYXNlIDApKSkKCihkZWZpbmUgcm9tYW4tbnVtZXJhbC1iYW5kcyAjKDEwMDAgOTAwIDUwMCA0MDAgMTAwIDkwIDUwIDQwIDEwIDkgNSA0IDEpKQooZGVmaW5lIHJvbWFuLW51bWVyYWwtc3RyaW5ncy11cHBlciAjKCJNIiAiQ00iICJEIiAiQ0QiICJDIiAiWEMiICJMIiAiWEwiICJYIiAiSVgiICJWIiAiSVYiICJJIikpCihkZWZpbmUgcm9tYW4tbnVtZXJhbC1zdHJpbmdzLWxvd2VyICMoIm0iICJjbSIgImQiICJjZCIgImMiICJ4YyIgImwiICJ4bCIgIngiICJpeCIgInYiICJpdiIgImkiKSkKCgooZGVmaW5lIChjb252ZXJ0LXJvbWFuLWhlbHBlciBudW1iZXIgdXBwZXItY2FzZSBiYW5kKSA7IGhlbHBlciBwcm9jZWR1cmUgZm9yIGNvbnZlcnQtcm9tYW4uIE5vdCBpbnRlbmRlZCB0byBiZSBjYWxsZWQgZGlyZWN0bHkuCiAgKGlmIChlcXY/IG51bWJlciAwKQogICAgICAiIgogICAobGV0ICgoYmFuZC1zdHJpbmcKICAgICAgKGlmIChlcXY/IHVwcGVyLWNhc2UgI3QpCiAgICAgICAgKHZlY3Rvci1yZWYgcm9tYW4tbnVtZXJhbC1zdHJpbmdzLXVwcGVyIGJhbmQpCiAgICAgICAgKHZlY3Rvci1yZWYgcm9tYW4tbnVtZXJhbC1zdHJpbmdzLWxvd2VyIGJhbmQpKSkKICAgICAgICAoYmFuZC1kaXZpc29yICh2ZWN0b3ItcmVmIHJvbWFuLW51bWVyYWwtYmFuZHMgYmFuZCkpKQogICAgKGlmICg+PSBudW1iZXIgYmFuZC1kaXZpc29yKQogICAgICAgIChzdHJpbmctYXBwZW5kIGJhbmQtc3RyaW5nIChjb252ZXJ0LXJvbWFuICgtIG51bWJlciBiYW5kLWRpdmlzb3IpIHVwcGVyLWNhc2UgYmFuZCkpCiAgICAgICAgKGNvbnZlcnQtcm9tYW4taGVscGVyIG51bWJlciB1cHBlci1jYXNlICgrIDEgYmFuZCkpKSkpKQoKKGRlZmluZSAobG93ZXItY2FzZS1sZXR0ZXItZXF1aXZhbGVudCBudW1iZXIpIDsgRXZhbHVhdGVzIHRvIHRoZSBsb3dlci1jYXNlIEVuZ2xpc2ggbGV0dGVyIGVxdWl2YWxlbnQgb2YgYSBudW1iZXIgZnJvbSAxLTI2LgogICAgKGlmIChhbmQgKDw9IG51bWJlciAyNikgKD49IG51bWJlciAxKSkKICAgICAgKHN0cmluZyAoaW50ZWdlci0+Y2hhciAoKyBudW1iZXIgOTYpKSkKICAgICAgImxvd2VyLWNhc2UtbGV0dGVyLWVxdWl2YWxlbnQ6IG51bWJlciBtdXN0IGJlIGJldHdlZW4gMS0yNiBpbmNsdXNpdmUuIikpCgooZGVmaW5lICh1cHBlci1jYXNlLWxldHRlci1lcXVpdmFsZW50IG51bWJlcikgOyBFdmFsdWF0ZXMgdG8gdGhlIHVwcGVyLWNhc2UgRW5nbGlzaCBsZXR0ZXIgZXF1aXZhbGVudCBvZiBhIG51bWJlciBmcm9tIDEtMjYuCiAgKGlmIChhbmQgKDw9IG51bWJlciAyNikgKD49IG51bWJlciAxKSkKICAgIChzdHJpbmcgKGludGVnZXItPmNoYXIgKCsgbnVtYmVyIDY0KSkpCiAgICAidXBwZXItY2FzZS1sZXR0ZXItZXF1aXZhbGVudDogbnVtYmVyIG11c3QgYmUgYmV0d2VlbiAxLTI2IGluY2x1c2l2ZS4iKSkK","string/$$BALE-VERSION$$":"0.1","string/$$VERSION$$":"0.0","string/$$MANDATORY$$":true,"string/$$LOAD_BALE$$":true,"string/$$FILEMANIFEST$$":["string/LICENSE-string.md","string/string-extensions.js","string/string-utilities.scm","string/$$BALE-VERSION$$","string/$$VERSION$$","string/$$MANDATORY$$","string/$$LOAD_BALE$$"]}