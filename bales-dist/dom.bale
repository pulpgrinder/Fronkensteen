{"dom/LICENSE-dom.md":"VGhlIGZvbGxvd2luZyBmaWxlcyBhcmUgY29weXJpZ2h0IDIwMTgtMjAyMCBieSBBbnRob255IFcuIEh1cnNoLCBhbmQgYXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBzYW1lIE1JVCBsaWNlbnNlIGFzIEZyb25rZW5zdGVlbiBhcyBhIHdob2xlLgoKCmBgYApkb20tZXh0ZW5zaW9ucy5qcwpkb20tdXRpbGl0aWVzLnNjbQpzY2hlbWUtY3NzLnNjbQpzY2hlbWUtZG9tLnNjbQpzZW1sLWV4dGVuc2lvbnMuanMKc29ydGFibGUtZXh0ZW5zaW9ucy5qcwpzeW50aGV0aWMtZG9tLnNjbQp3aXJlZC5zY20KYGBgCgpgZm9yY2VyZWZsb3cuanNgIGlzIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgZm9sbG93aW5nIFdURlBMIGxpY2Vuc2U6CgpUaGlzIGlzIGZyZWUgYW5kIHVuZW5jdW1iZXJlZCBzb2Z0d2FyZSByZWxlYXNlZCBpbnRvIHRoZSBwdWJsaWMgZG9tYWluLgoKQW55b25lIGlzIGZyZWUgdG8gY29weSwgbW9kaWZ5LCBwdWJsaXNoLCB1c2UsIGNvbXBpbGUsIHNlbGwsIG9yCmRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZSwgZWl0aGVyIGluIHNvdXJjZSBjb2RlIGZvcm0gb3IgYXMgYSBjb21waWxlZApiaW5hcnksIGZvciBhbnkgcHVycG9zZSwgY29tbWVyY2lhbCBvciBub24tY29tbWVyY2lhbCwgYW5kIGJ5IGFueQptZWFucy4KCkluIGp1cmlzZGljdGlvbnMgdGhhdCByZWNvZ25pemUgY29weXJpZ2h0IGxhd3MsIHRoZSBhdXRob3Igb3IgYXV0aG9ycwpvZiB0aGlzIHNvZnR3YXJlIGRlZGljYXRlIGFueSBhbmQgYWxsIGNvcHlyaWdodCBpbnRlcmVzdCBpbiB0aGUKc29mdHdhcmUgdG8gdGhlIHB1YmxpYyBkb21haW4uIFdlIG1ha2UgdGhpcyBkZWRpY2F0aW9uIGZvciB0aGUgYmVuZWZpdApvZiB0aGUgcHVibGljIGF0IGxhcmdlIGFuZCB0byB0aGUgZGV0cmltZW50IG9mIG91ciBoZWlycyBhbmQKc3VjY2Vzc29ycy4gV2UgaW50ZW5kIHRoaXMgZGVkaWNhdGlvbiB0byBiZSBhbiBvdmVydCBhY3Qgb2YKcmVsaW5xdWlzaG1lbnQgaW4gcGVycGV0dWl0eSBvZiBhbGwgcHJlc2VudCBhbmQgZnV0dXJlIHJpZ2h0cyB0byB0aGlzCnNvZnR3YXJlIHVuZGVyIGNvcHlyaWdodCBsYXcuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwKRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GCk1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4KSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsCkFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUgpPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCgpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHJlZmVyIHRvIDxodHRwOi8vdW5saWNlbnNlLm9yZz4KCmByYW5neWlucHV0cy1qcXVlcnkuanNgIGlzIGNvcHlyaWdodCAyMDE3IFRpbSBEb3duLCBhbmQgaXMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBmb2xsb3dpbmcgTUlUIGxpY2Vuc2U6CgpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5Cm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsCmluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMKdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbApjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMKZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbApjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQpBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sCk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFClNPRlRXQVJFLgoKYFNvcnRhYmxlLm1pbi5qc2AgaXMgY29weXJpZ2h0IDIwMTkgYnkgU29ydGFibGUgY29udHJpYnV0b3JzLCBhbmQgaXMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBmb2xsb3dpbmcgTUlUIGxpY2Vuc2U6CgpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5Cm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsCmluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMKdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbApjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMKZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbApjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQpBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sCk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFClNPRlRXQVJFLgo=","dom/dom-extensions.js":"","dom/forcereflow.js":"Ly8gQ3JlZGl0OiBodHRwczovL2dpdGh1Yi5jb20vYW5vbnljby9Gb3JjZS1ET00tcmVmbG93LUpTIFdURlBMCgp0cnl7Zm9yY2VSZWZsb3dKUz1hdG9iLmNhbGwuYmluZChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEhUTUxFbGVtZW50LnByb3RvdHlwZSwib2Zmc2V0SGVpZ2h0IikuZ2V0KX1jYXRjaChlKXtmb3JjZVJlZmxvd0pTPWZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0Ijt2b2lkIGEub2Zmc2V0SGVpZ2h0fX0K","dom/rangyinputs-jquery.js":"LyoqCiAqIEBsaWNlbnNlIFJhbmd5IElucHV0cywgYSBqUXVlcnkgcGx1Zy1pbiBmb3Igc2VsZWN0aW9uIGFuZCBjYXJldCBtYW5pcHVsYXRpb24gd2l0aGluIHRleHRhcmVhcyBhbmQgdGV4dCBpbnB1dHMuCiAqCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90aW1kb3duL3Jhbmd5aW5wdXRzCiAqCiAqIEZvciByYW5nZSBhbmQgc2VsZWN0aW9uIGZlYXR1cmVzIGZvciBjb250ZW50ZWRpdGFibGUsIHNlZSBSYW5neS4KCiAqIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9yYW5neS8KICoKICogRGVwZW5kcyBvbiBqUXVlcnkgMS4wIG9yIGxhdGVyLgogKgogKiBDb3B5cmlnaHQgMjAxNCwgVGltIERvd24KICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBWZXJzaW9uOiAxLjIuMAogKiBCdWlsZCBkYXRlOiAzMCBOb3ZlbWJlciAyMDE0CiAqLwohZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHQpe3ZhciBuPXR5cGVvZiBlW3RdO3JldHVybiJmdW5jdGlvbiI9PT1ufHwhKCJvYmplY3QiIT1ufHwhZVt0XSl8fCJ1bmtub3duIj09bn1mdW5jdGlvbiBuKGUsdCl7cmV0dXJuIHR5cGVvZiBlW3RdIT14fWZ1bmN0aW9uIHIoZSx0KXtyZXR1cm4hKCJvYmplY3QiIT10eXBlb2YgZVt0XXx8IWVbdF0pfWZ1bmN0aW9uIG8oZSl7d2luZG93LmNvbnNvbGUmJndpbmRvdy5jb25zb2xlLmxvZyYmd2luZG93LmNvbnNvbGUubG9nKCJSYW5neUlucHV0cyBub3Qgc3VwcG9ydGVkIGluIHlvdXIgYnJvd3Nlci4gUmVhc29uOiAiK2UpfWZ1bmN0aW9uIGEoZSx0LG4pe3JldHVybiAwPnQmJih0Kz1lLnZhbHVlLmxlbmd0aCksdHlwZW9mIG49PXgmJihuPXQpLDA+biYmKG4rPWUudmFsdWUubGVuZ3RoKSx7c3RhcnQ6dCxlbmQ6bn19ZnVuY3Rpb24gYyhlLHQsbil7cmV0dXJue3N0YXJ0OnQsZW5kOm4sbGVuZ3RoOm4tdCx0ZXh0OmUudmFsdWUuc2xpY2UodCxuKX19ZnVuY3Rpb24gbCgpe3JldHVybiByKGRvY3VtZW50LCJib2R5Iik/ZG9jdW1lbnQuYm9keTpkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYm9keSIpWzBdfXZhciBpLHUscyxkLGYsdixwLG0sZyx4PSJ1bmRlZmluZWQiO2UoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gaChlLHQpe3ZhciBuPWUudmFsdWUscj1pKGUpLG89ci5zdGFydDtyZXR1cm57dmFsdWU6bi5zbGljZSgwLG8pK3Qrbi5zbGljZShyLmVuZCksaW5kZXg6byxyZXBsYWNlZDpyLnRleHR9fWZ1bmN0aW9uIHkoZSx0KXtlLmZvY3VzKCk7dmFyIG49aShlKTtyZXR1cm4gdShlLG4uc3RhcnQsbi5lbmQpLCIiPT10P2RvY3VtZW50LmV4ZWNDb21tYW5kKCJkZWxldGUiLCExLG51bGwpOmRvY3VtZW50LmV4ZWNDb21tYW5kKCJpbnNlcnRUZXh0IiwhMSx0KSx7cmVwbGFjZWQ6bi50ZXh0LGluZGV4Om4uc3RhcnR9fWZ1bmN0aW9uIFQoZSx0KXtlLmZvY3VzKCk7dmFyIG49aChlLHQpO3JldHVybiBlLnZhbHVlPW4udmFsdWUsbn1mdW5jdGlvbiBFKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpcy5qcXVlcnk/dGhpc1swXTp0aGlzLHI9bi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKDE9PW4ubm9kZVR5cGUmJigidGV4dGFyZWEiPT1yfHwiaW5wdXQiPT1yJiYvXig/OnRleHR8ZW1haWx8bnVtYmVyfHNlYXJjaHx0ZWx8dXJsfHBhc3N3b3JkKSQvaS50ZXN0KG4udHlwZSkpKXt2YXIgbz1bbl0uY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpLGE9ZS5hcHBseSh0aGlzLG8pO2lmKCF0KXJldHVybiBhfXJldHVybiB0P3RoaXM6dm9pZCAwfX12YXIgUz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpO2lmKGwoKS5hcHBlbmRDaGlsZChTKSxuKFMsInNlbGVjdGlvblN0YXJ0IikmJm4oUywic2VsZWN0aW9uRW5kIikpaT1mdW5jdGlvbihlKXt2YXIgdD1lLnNlbGVjdGlvblN0YXJ0LG49ZS5zZWxlY3Rpb25FbmQ7cmV0dXJuIGMoZSx0LG4pfSx1PWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1hKGUsdCxuKTtlLnNlbGVjdGlvblN0YXJ0PXIuc3RhcnQsZS5zZWxlY3Rpb25FbmQ9ci5lbmR9LGc9ZnVuY3Rpb24oZSx0KXt0P2Uuc2VsZWN0aW9uRW5kPWUuc2VsZWN0aW9uU3RhcnQ6ZS5zZWxlY3Rpb25TdGFydD1lLnNlbGVjdGlvbkVuZH07ZWxzZXtpZighKHQoUywiY3JlYXRlVGV4dFJhbmdlIikmJnIoZG9jdW1lbnQsInNlbGVjdGlvbiIpJiZ0KGRvY3VtZW50LnNlbGVjdGlvbiwiY3JlYXRlUmFuZ2UiKSkpcmV0dXJuIGwoKS5yZW1vdmVDaGlsZChTKSx2b2lkIG8oIk5vIG1lYW5zIG9mIGZpbmRpbmcgdGV4dCBpbnB1dCBjYXJldCBwb3NpdGlvbiIpO2k9ZnVuY3Rpb24oZSl7dmFyIHQsbixyLG8sYT0wLGw9MCxpPWRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpO3JldHVybiBpJiZpLnBhcmVudEVsZW1lbnQoKT09ZSYmKHI9ZS52YWx1ZS5sZW5ndGgsdD1lLnZhbHVlLnJlcGxhY2UoL1xyXG4vZywiXG4iKSxuPWUuY3JlYXRlVGV4dFJhbmdlKCksbi5tb3ZlVG9Cb29rbWFyayhpLmdldEJvb2ttYXJrKCkpLG89ZS5jcmVhdGVUZXh0UmFuZ2UoKSxvLmNvbGxhcHNlKCExKSxuLmNvbXBhcmVFbmRQb2ludHMoIlN0YXJ0VG9FbmQiLG8pPi0xP2E9bD1yOihhPS1uLm1vdmVTdGFydCgiY2hhcmFjdGVyIiwtciksYSs9dC5zbGljZSgwLGEpLnNwbGl0KCJcbiIpLmxlbmd0aC0xLG4uY29tcGFyZUVuZFBvaW50cygiRW5kVG9FbmQiLG8pPi0xP2w9cjoobD0tbi5tb3ZlRW5kKCJjaGFyYWN0ZXIiLC1yKSxsKz10LnNsaWNlKDAsbCkuc3BsaXQoIlxuIikubGVuZ3RoLTEpKSksYyhlLGEsbCl9O3ZhciB3PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQtKGUudmFsdWUuc2xpY2UoMCx0KS5zcGxpdCgiXHJcbiIpLmxlbmd0aC0xKX07dT1mdW5jdGlvbihlLHQsbil7dmFyIHI9YShlLHQsbiksbz1lLmNyZWF0ZVRleHRSYW5nZSgpLGM9dyhlLHIuc3RhcnQpO28uY29sbGFwc2UoITApLHIuc3RhcnQ9PXIuZW5kP28ubW92ZSgiY2hhcmFjdGVyIixjKTooby5tb3ZlRW5kKCJjaGFyYWN0ZXIiLHcoZSxyLmVuZCkpLG8ubW92ZVN0YXJ0KCJjaGFyYWN0ZXIiLGMpKSxvLnNlbGVjdCgpfSxnPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7bi5jb2xsYXBzZSh0KSxuLnNlbGVjdCgpfX1sKCkucmVtb3ZlQ2hpbGQoUyk7dmFyIGI9ZnVuY3Rpb24oZSx0KXt2YXIgbj1oKGUsdCk7dHJ5e3ZhciByPXkoZSx0KTtpZihlLnZhbHVlPT1uLnZhbHVlKXJldHVybiBiPXkscn1jYXRjaChvKXt9cmV0dXJuIGI9VCxlLnZhbHVlPW4udmFsdWUsbn07ZD1mdW5jdGlvbihlLHQsbixyKXt0IT1uJiYodShlLHQsbiksYihlLCIiKSksciYmdShlLHQpfSxzPWZ1bmN0aW9uKGUpe3UoZSxiKGUsIiIpLmluZGV4KX0sbT1mdW5jdGlvbihlKXt2YXIgdD1iKGUsIiIpO3JldHVybiB1KGUsdC5pbmRleCksdC5yZXBsYWNlZH07dmFyIFI9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG89dCtuLmxlbmd0aDtpZihyPSJzdHJpbmciPT10eXBlb2Ygcj9yLnRvTG93ZXJDYXNlKCk6IiIsKCJjb2xsYXBzZXRvZW5kIj09cnx8InNlbGVjdCI9PXIpJiYvW1xyXG5dLy50ZXN0KG4pKXt2YXIgYT1uLnJlcGxhY2UoL1xyXG4vZywiXG4iKS5yZXBsYWNlKC9cci9nLCJcbiIpO289dCthLmxlbmd0aDt2YXIgYz10K2EuaW5kZXhPZigiXG4iKTsiXHJcbiI9PWUudmFsdWUuc2xpY2UoYyxjKzIpJiYobys9YS5tYXRjaCgvXG4vZykubGVuZ3RoKX1zd2l0Y2gocil7Y2FzZSJjb2xsYXBzZXRvc3RhcnQiOnUoZSx0LHQpO2JyZWFrO2Nhc2UiY29sbGFwc2V0b2VuZCI6dShlLG8sbyk7YnJlYWs7Y2FzZSJzZWxlY3QiOnUoZSx0LG8pfX07Zj1mdW5jdGlvbihlLHQsbixyKXt1KGUsbiksYihlLHQpLCJib29sZWFuIj09dHlwZW9mIHImJihyPXI/ImNvbGxhcHNlVG9FbmQiOiIiKSxSKGUsbix0LHIpfSx2PWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1iKGUsdCk7UihlLHIuaW5kZXgsdCxufHwiY29sbGFwc2VUb0VuZCIpfSxwPWZ1bmN0aW9uKGUsdCxuLHIpe3R5cGVvZiBuPT14JiYobj10KTt2YXIgbz1pKGUpLGE9YihlLHQrby50ZXh0K24pO1IoZSxhLmluZGV4K3QubGVuZ3RoLG8udGV4dCxyfHwic2VsZWN0Iil9LGUuZm4uZXh0ZW5kKHtnZXRTZWxlY3Rpb246RShpLCExKSxzZXRTZWxlY3Rpb246RSh1LCEwKSxjb2xsYXBzZVNlbGVjdGlvbjpFKGcsITApLGRlbGV0ZVNlbGVjdGVkVGV4dDpFKHMsITApLGRlbGV0ZVRleHQ6RShkLCEwKSxleHRyYWN0U2VsZWN0ZWRUZXh0OkUobSwhMSksaW5zZXJ0VGV4dDpFKGYsITApLHJlcGxhY2VTZWxlY3RlZFRleHQ6RSh2LCEwKSxzdXJyb3VuZFNlbGVjdGVkVGV4dDpFKHAsITApfSl9KX0oalF1ZXJ5KTs=","dom/seml-extensions.js":"","dom/sortable-extensions.js":"Ly8gQml3YVNjaGVtZSBpbnRlcmZhY2UgZm9yIFNvcnRhYmxlLgovLyBDb3B5cmlnaHQgMjAxOSBieSBBbnRob255IFcuIEh1cnNoCi8vIE1JVCBMaWNlbnNlLgoKCkJpd2FTY2hlbWUuZGVmaW5lX2xpYmZ1bmMoInNvcnRhYmxlIiAsMSwgMSwgZnVuY3Rpb24oYXIpewogIC8vIEVuYWJsZSBzb3J0aW5nIG9uIHRoZSBjb250YWluZXIgc3BlY2lmaWVkIGluIGFyWzBdCiAgcmV0dXJuIG5ldyBTb3J0YWJsZSgkKGFyWzBdKVswXSx7CiAgICBvbkVuZDogZnVuY3Rpb24oZXZ0KXsKICAgICAgbGV0IHNvcnRfcHJvYyA9IGFyWzBdLnJlcGxhY2UoL15cIy8sIiIpICsgIl9zb3J0ZWQiCiAgICAgIGlmKEJpd2FTY2hlbWUuaXNfcHJvY2VkdXJlX2RlZmluZWQoc29ydF9wcm9jKSl7CiAgICAgICAgc2NoZW1lX2ludGVycHJldGVyLmV2YWx1YXRlKCIoIiArIHNvcnRfcHJvYyArICAiIFwiIiArIGV2dC5pdGVtLmlkICsgIlwiKSIpOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGV2dC5pdGVtLmlkKS5mb2N1cygpOwogICAgICB9CiAgICAgIGVsc2V7CiAgICAgICAgY29uc29sZS5sb2coIk5vIHNvcnRlZCBldmVudCBoYW5kbGVyIGRlZmluZWQ6ICIgKyBzb3J0X3Byb2MpOwoKICAgICAgfQogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICBvbkNob29zZTogZnVuY3Rpb24oZXZ0KXsKICAgICAgbGV0IGNob29zZV9wcm9jID0gYXJbMF0ucmVwbGFjZSgvXlwjLywiIikgKyAiX2Nob3NlbiIKICAgICAgaWYoQml3YVNjaGVtZS5pc19wcm9jZWR1cmVfZGVmaW5lZChjaG9vc2VfcHJvYykpewogICAgICAgIHNjaGVtZV9pbnRlcnByZXRlci5ldmFsdWF0ZSgiKCIgKyBjaG9vc2VfcHJvYyArICIgIiArIGV2dC5vbGRJbmRleCArICIpIik7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgZWxzZXsKICAgICAgICBjb25zb2xlLmxvZygiTm8gY2hvb3NlIGV2ZW50IGhhbmRsZXIgZGVmaW5lZDogIiArIGNob29zZV9wcm9jKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfQoKICB9KTsKfSkK","dom/Sortable.min.js":"","dom/scheme-css.scm":"OyBzY2hlbWVjc3Muc2NtCjsgQ29weXJpZ2h0IDIwMTgtMjAxOSBieSBBbnRob255IFcuIEh1cnNoCjsgTUlUIExpY2Vuc2UuCgooZGVmaW5lIChjc3Mtc3RyaW5nIGFyZ3MpCiAgKGlmIChsaXN0PyAoY2FyIGFyZ3MpKQogICAgKGdlbi1jc3MgKGNhciBhcmdzKSkKICAgIChjYXIgYXJncykpKQoKKGRlZmluZSAoaW5zdGFsbC1jc3MgLiBhcmdzKQogIChpZiAoPSAobGVuZ3RoIGFyZ3MpIDIpCiAgICAgIChiZWdpbgogICAgICAgICAgKCUgKDw8ICIjIihjYXIgYXJncykpICJyZW1vdmUiKQogICAgICAgICAgKGpzLWluc3RhbGwtaGVhZCAoc3R5bGUgKDw8ICIjIiAoY2FyIGFyZ3MpICIuZHluYW1pY19zdHlsZV9zaGVldCIpCiAgICAgICAgKGNhZHIgYXJncykpKSkKICAJICAoanMtaW5zdGFsbC1oZWFkIChzdHlsZSAoPDwgIiMiIChnZW4tY3NzLWlkKSAiLmR5bmFtaWNfc3R5bGVfc2hlZXQiKQogICAgICAgKGNhciBhcmdzKSkpKSkKCihkZWZpbmUgaW5zdGFsbC1zdHlsZXNoZWV0IGluc3RhbGwtY3NzKQoKKGRlZmluZSAocHJvYy1jc3MtbGlzdCBhcmdzKQogIAkoaWYgKGVxdj8gYXJncyAnKCkpICIiCiAgICAgICAgKHN0cmluZy1hcHBlbmQgKHByb2MtY3NzIChjYXIgYXJncykpIChwcm9jLWNzcy1saXN0IChjZHIgYXJncykpKSkpCgooZGVmaW5lIChwcm9jLWNzcyBzcGVjKQogIAkoaWYgKGVxdj8gc3BlYyAnKCkpICIiCiAgICAgICAgKHN0cmluZy1hcHBlbmQgKGNhciBzcGVjKSAie1xuIiAocHJvYy1jc3MtcnVsZXMgKGNhZHIgc3BlYykpICJ9XG4iKSkpCgooZGVmaW5lIChwcm9jLWNzcy1ydWxlcyBydWxlLWxpc3QpCiAgICAgKGlmIChlcXY/IHJ1bGUtbGlzdCAnKCkpICIiCiAgICAJIChzdHJpbmctYXBwZW5kIChjYXIgcnVsZS1saXN0KSAiOiIgKGNhZHIgcnVsZS1saXN0KSAiO1xuIiAocHJvYy1jc3MtcnVsZXMgKGNkZHIgcnVsZS1saXN0KSkpKSkKCgooZGVmaW5lIChsb2FkLXN0eWxlc2hlZXQgaWQgZmlsZW5hbWUpCiAgKGpzLWluc3RhbGwtaGVhZAogICAoc3RyaW5nLWFwcGVuZCAiPGxpbmsgaWQ9JyIgaWQgIicgcmVsPSdzdHlsZXNoZWV0JyBocmVmPSciICBmaWxlbmFtZSAgICInPiIpKSkKCihkZWZpbmUgKGdyaWQtY29udGFpbmVyIGlkIGdhcCBjb2xsaXN0IHJvd2xpc3QpCiAgICAgKHN0cmluZy1hcHBlbmQgaWQgIntcbiAgICBkaXNwbGF5OmdyaWQ7XG4gICAgZ3JpZC1nYXA6IiBnYXAKICAgICAiO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczoiIGNvbGxpc3QgIjtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IiByb3dsaXN0ICI7XG59XG4iKSkK","dom/scheme-dom.scm":"","dom/synthetic-dom.scm":"","dom/wired.scm":"OyB3aXJlZC5zY20KOyBDb3B5cmlnaHQgMjAxOSBieSBBbnRob255IFcuIEh1cnNoCjsgTUlUIExpY2Vuc2UuCgooZGVmaW5lIChnZW5faGFuZGxlciB0eXBlIGV2KQogIChsZXQgKCh0YXJnZXQgKGpzLXJlZiBldiAiY3VycmVudFRhcmdldCIpKSkKICAgIChsZXQgKChpZCAgKGVsZW1lbnQtcmVhZC1hdHRyaWJ1dGUgdGFyZ2V0ICJpZCIpKSkKICAgICAgKGlmIChqcy11bmRlZmluZWQ/IGlkKQogICAgICAgIChjb25zb2xlLWxvZyAoc3RyaW5nLWFwcGVuZCAid2lyZWQ6IGdvdCAiIHR5cGUgIiBldmVudCBvbiBlbGVtZW50IHRoYXQgaGFzIG5vIGlkLiIpKQogICAgICAgIChsZXQgKChoYW5kbGVyLW5hbWUgKHN0cmluZy1hcHBlbmQgaWQgIl8iIHR5cGUpKSkKICAgICAgICAgIChpZiAoaXMtcHJvY2VkdXJlLWRlZmluZWQ/IGhhbmRsZXItbmFtZSkKICAgICAgICAgICAgKChldmFsIChzdHJpbmctPnN5bWJvbCBoYW5kbGVyLW5hbWUpKSBldikKICAgICAgICAgICAgKGNvbnNvbGUtbG9nIChzdHJpbmctYXBwZW5kICJhdXRvd2lyZTogIiBoYW5kbGVyLW5hbWUgIjogcHJvY2VkdXJlIG5vdCBpbXBsZW1lbnRlZC4iKSkpKSkpKSkKCgooZGVmaW5lIChzZWxlY3RfaGFuZGxlciBldikKICAobGV0ICgodGFyZ2V0IChqcy1yZWYgZXYgImN1cnJlbnRUYXJnZXQiKSkpCiAgICAobGV0ICgocGFyZW50ICAoZWxlbWVudC1yZWFkLWF0dHJpYnV0ZSB0YXJnZXQgInBhcmVudCIpKQogICAgICAgICAgKGluZGV4IChlbGVtZW50LXJlYWQtYXR0cmlidXRlIHRhcmdldCAiaW5kZXgiKSkpCiAgICAgIChsZXQgKChoYW5kbGVyLW5hbWUgKHN0cmluZy1hcHBlbmQgcGFyZW50ICJfc2VsZWN0IikpKQogICAgICAgIChpZiAoaXMtcHJvY2VkdXJlLWRlZmluZWQ/IGhhbmRsZXItbmFtZSkKICAgICAgICAgICgoZXZhbCAoc3RyaW5nLT5zeW1ib2wgaGFuZGxlci1uYW1lKSkgZXYgaW5kZXgpCiAgICAgICAgICAgIChjb25zb2xlLWxvZyAoc3RyaW5nLWFwcGVuZCAiYXV0b3dpcmU6ICIgaGFuZGxlci1uYW1lICI6IHByb2NlZHVyZSBub3QgaW1wbGVtZW50ZWQuIikpKSkpKSkKCihkZWZpbmUgKGNsaWNrX2hhbmRsZXIgZXYpCiAgKGdlbl9oYW5kbGVyICJjbGljayIgZXYpKQoKKGRlZmluZSAoY2hhbmdlX2hhbmRsZXIgZXYpCiAgKGdlbl9oYW5kbGVyICJjaGFuZ2UiIGV2KSkKCihkZWZpbmUgKGlucHV0X2hhbmRsZXIgZXYpCiAgKGdlbl9oYW5kbGVyICJpbnB1dCIgZXYpKQoKCihkZWZpbmUgKHdpcmUtY2xpY2sgc2VsZWN0b3IpCiAgKCUgc2VsZWN0b3IgIm9mZiIgImNsaWNrIikKICAoJSBzZWxlY3RvciAib24iICJjbGljayIgKGxhbWJkYShldikgKGNsaWNrX2hhbmRsZXIgZXYpKSkpCgoKKGRlZmluZSAod2lyZS1idXR0b25zKQogICh3aXJlLWNsaWNrICJidXR0b24iKSkKCihkZWZpbmUgKHdpcmUtYnV0dG9uIHNlbGVjdG9yKQogICh3aXJlLWNsaWNrIHNlbGVjdG9yKSkKCihkZWZpbmUgKHdpcmUtdGV4dC1pbnB1dHMpCiAgKHdpcmUtdGV4dC1pbnB1dCAiaW5wdXQ6dGV4dCIpKQoKKGRlZmluZSAod2lyZS10ZXh0LWlucHV0IHNlbGVjdG9yKQogICglIHNlbGVjdG9yICJvZmYiICJpbnB1dCIpCiAgKCUgc2VsZWN0b3IgIm9uIiAiaW5wdXQiIChsYW1iZGEoZXYpIChpbnB1dF9oYW5kbGVyIGV2KSkpKQoKKGRlZmluZSAod2lyZS1jaGFuZ2Ugc2VsZWN0b3IpCiAgKCUgc2VsZWN0b3IgIm9mZiIgImNoYW5nZSIpCiAgKCUgc2VsZWN0b3IgIm9uIiAiY2hhbmdlIiAobGFtYmRhKGV2KSAoY2hhbmdlX2hhbmRsZXIgZXYpKSkpCgooZGVmaW5lICh3aXJlLXN1Ym1pdC1pbnB1dHMpCiAgKHdpcmUtc3VibWl0LWlucHV0ICJpbnB1dDpzdWJtaXQiKSkKCihkZWZpbmUgKHdpcmUtc3VibWl0LWlucHV0IHNlbGVjdG9yKQogICAgKHdpcmUtY2xpY2sgc2VsZWN0b3IpKQoKKGRlZmluZSAod2lyZS11aSkKICAod2lyZS1idXR0b25zKQogICh3aXJlLXRleHQtaW5wdXRzKQogICh3aXJlLXN1Ym1pdC1pbnB1dHMpKQo=","dom/dom-utilities.scm":"OyBET00gbWFuaXB1bGF0aW9uIHV0aWxpdGllcy4KOyBDb3B5cmlnaHQgMjAxOSBieSBBbnRob255IFcuIEh1cnNoLgo7IE1JVCBMaWNlbnNlLgoKKGRlZmluZSAocmFuZG9taXplLXNlbGVjdCEgc2VsZWN0LWlkKSA7IGpRdWVyeS4gUmFuZG9taXplcyB0aGUgY2hvc2VuIG9wdGlvbiBvZiB0aGUgSFRNTCBzZWxlY3QgZWxlbWVudCBzcGVjaWZpZWQgYnkgc2VsZWN0LWlkLgogICAgKGxldCAoKHNlbGVjdC1sZW5ndGggKGpxLWxlbmd0aCAoJSAoc2VsZWN0LWlkICIgPiBvcHRpb24iKSkpKSkKICAgICAgKCUgaGFzaGVkLWlkICJwcm9wIiAic2VsZWN0ZWRJbmRleCIgKHJhbmRvbS1pbnRlZ2VyIHNlbGVjdC1sZW5ndGgpKSkpCgoKKGRlZmluZSAocG9wdWxhdGUtc2VsZWN0IGlkIGl0ZW1zKSA7IFBvcHVsYXRlIHRoZSBnaXZlbiBIVE1MIHNlbGVjdCBlbGVtZW50IHdpdGggb3B0aW9ucyBnZW5lcmF0ZWQgZnJvbSBhIGxpc3Qgb2YgaXRlbXMuIFRoZSBpdGVtcyBjYW4gZWl0aGVyIGJlIHNpbmdsZSBzdHJpbmdzLCBpbiB3aGljaCBjYXNlIHRoZSB2YWx1ZSBhbmQgdGhlIGRpc3BsYXllZCB0ZXh0IGZvciB0aGUgaXRlbSB3aWxsIGJlIHRoZSBzdHJpbmcsIG9yIGxpc3RzIG9mIHZhbHVlL2NhcHRpb24gcGFpcnMsIGluIHdoaWNoIGNhc2UgdGhlIHZhbHVlIG9mIHRoZSBvcHRpb24gd2lsbCBiZSB0aGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgbGlzdCBhbmQgdGhlIGRpc3BsYXllZCB0ZXh0IHRoZSBzZWNvbmQuCiAgKCUgaWQgImh0bWwiIChnZW5lcmF0ZS1zZWxlY3QtaXRlbXMtcmVjIGl0ZW1zKSkpCgoKKGRlZmluZSAoZ2VuZXJhdGUtc2VsZWN0LWl0ZW1zLXJlYyBpdGVtcykgOyBoZWxwaGVyIGZ1bmN0aW9uIGZvciBwb3B1bGF0ZS1zZWxlY3QuIE5vdCBpbnRlbmRlZCB0byBiZSBjYWxsZWQgZGlyZWN0bHkuCiAgKGNvbmQgKChlcXY/IGl0ZW1zICcoKSkgIiIpCiAgICAgICAgKChsaXN0PyAoY2FyIGl0ZW1zKSkgKDw8ICI8b3B0aW9uIHZhbHVlPSciIChjYWFyIGl0ZW1zKSAiJz4iIChjYWRhciBpdGVtcykgIjwvb3B0aW9uPiIgKGdlbmVyYXRlLXNlbGVjdC1pdGVtcy1yZWMgKGNkciBpdGVtcykpKSkKICAgICAgICAoI3QgKDw8ICI8b3B0aW9uIHZhbHVlPSciIChjYXIgaXRlbXMpICInPiIgKGNhciBpdGVtcykgIjwvb3B0aW9uPiIgKGdlbmVyYXRlLXNlbGVjdC1pdGVtcy1yZWMgKGNkciBpdGVtcykpKSkpKQoKCihkZWZpbmUgKGNoZWNrYm94LWNoZWNrZWQ/IGlkKSA7IGpRdWVyeS4gRXZhbHVhdGVzIHRvIHRydWUgaWYgdGhlIGNoZWNrYm94IHNwZWNpZmllZCBieSBpZCBpcyBjaGVja2VkLgogICglIGlkICJpcyIgIjpjaGVja2VkIikpCgooZGVmaW5lIChzZXQtY2hlY2tib3gtY2hlY2tlZCEgaWQgc3RhdGUpIDsgalF1ZXJ5LiBTZXRzIHRoZSBzdGF0ZSBvZiB0aGUgIGNoZWNrYm94IHNwZWNpZmllZCBieSBpZCB0byB0aGUgZ2l2ZW4gc3RhdGUgKCN0IC0+IGNoZWNrZWQsICNmIC0+IHVuY2hlY2tlZCkKICAoaWYgKGVxPyBzdGF0ZSAjdCkKICAgICglIGlkICJwcm9wIiAiY2hlY2tlZCIgImNoZWNrZWQiKQogICAgKCUgaWQgInByb3AiICJjaGVja2VkIiAiIikpKQo=","dom/$$BALE-VERSION$$":"0.1","dom/$$VERSION$$":"0.0","dom/$$MANDATORY$$":true,"dom/$$LOAD_BALE$$":true,"dom/$$FILEMANIFEST$$":["dom/LICENSE-dom.md","dom/dom-extensions.js","dom/forcereflow.js","dom/rangyinputs-jquery.js","dom/seml-extensions.js","dom/sortable-extensions.js","dom/Sortable.min.js","dom/scheme-css.scm","dom/scheme-dom.scm","dom/synthetic-dom.scm","dom/wired.scm","dom/dom-utilities.scm","dom/$$BALE-VERSION$$","dom/$$VERSION$$","dom/$$MANDATORY$$","dom/$$LOAD_BALE$$"]}