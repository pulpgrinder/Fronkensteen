{"version":"0.1beta","documentation/LICENSE-documentation.md":{"timestamp":1603724548923,"data":"VGhlIGRvY3VtZW50YXRpb24gc3lzdGVtIGFuZCB0aGUgZG9jdW1lbnRhdGlvbiB3cml0dGVuIGZvciBGcm9ua2Vuc3RlZW4tc3BlY2lmaWMgcHJvY2VkdXJlcyBhbmQgdG9vbHMgYXJlIGNvcHlyaWdodCAyMDE4LTIwMjAgYnkgQW50aG9ueSBXLiBIdXJzaCwgYW5kIGFyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgc2FtZSBNSVQgbGljZW5zZSBhcyB0aGUgRnJvbmtlbnN0ZWVuIHN5c3RlbSBhcyBhIHdob2xlLgoKVGhlIGRvY3VtZW50YXRpb24gZm9yIHN0YW5kYXJkIFNjaGVtZSBwcm9jZWR1cmVzIGlzIGFkYXB0ZWQgZnJvbSB0aGUgUl42XlJTIHJlcG9ydCwgd2hpY2ggd2FzIHJlbGVhc2VkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgZm9sbG93aW5nIGxpY2Vuc2U6CgogPiBXZSBpbnRlbmQgdGhpcyByZXBvcnQgdG8gYmVsb25nIHRvIHRoZSBlbnRpcmUgU2NoZW1lIGNvbW11bml0eSwgYW5kIHNvIHdlIGdyYW50IHBlcm1pc3Npb24gdG8gY29weSBpdCBpbiB3aG9sZSBvciBpbiBwYXJ0IHdpdGhvdXQgZmVlLiBJbiBwYXJ0aWN1bGFyLCB3ZSBlbmNvdXJhZ2UgaW1wbGVtZW50b3JzIG9mIFNjaGVtZSB0byB1c2UgdGhpcyByZXBvcnQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgbWFudWFscyBhbmQgb3RoZXIgZG9jdW1lbnRhdGlvbiwgbW9kaWZ5aW5nIGl0IGFzIG5lY2Vzc2FyeS4KCkdyYXRlZnVsIGFja25vd2xlZGdlbWVudCBpcyBtYWRlIHRvIGFsbCB0aGUgYXV0aG9ycyBhbmQgZWRpdG9ycyBvZiB0aGUgUl42XlJTIFJlcG9ydCwgaW5jbHVkaW5nIHRoZSBpbmRpdmlkdWFscyBsaXN0ZWQgYmVsb3c6CgpNaWNoYWVsIFNwZXJiZXIsIFIuIEtlbnQgRHlidmlnLCBNYXR0aGV3IEZsYXR0LCBBbnRvbiBWYW4gU3RyYWF0ZW4gKEVkaXRvcnMpCgpSaWNoYXJkIEtlbHNleSwgV2lsbGlhbSBDbGluZ2VyLCBKb25hdGhhbiBSZWVzLCAoRWRpdG9ycywgUmV2aXNlZDUgUmVwb3J0IG9uIHRoZSBBbGdvcml0aG1pYyBMYW5ndWFnZSBTY2hlbWUpCgpSb2JlcnQgQnJ1Y2UgRmluZGxlciwgSmFjb2IgTWF0dGhld3MgKEF1dGhvcnMsIGZvcm1hbCBzZW1hbnRpY3MpCgpJbiBhZGRpdGlvbiwgdGhlIGZvbGxvd2luZyBpbmRpdmlkdWFscyB3ZXJlIGFja25vd2xlZGdlZCBieSB0aGUgZWRpdG9ycyBvZiB0aGUgUl42XlJTIFJlcG9ydDoKCj4gTWFueSBwZW9wbGUgY29udHJpYnV0ZWQgc2lnbmlmaWNhbnQgaGVscCB0byB0aGlzIHJldmlzaW9uIG9mIHRoZSByZXBvcnQuIFNwZWNpZmljYWxseSwgd2UgdGhhbmsgQXppeiBHaHVsb3VtIGFuZCBBbmRyw6kgdmFuIFRvbmRlciBmb3IgY29udHJpYnV0aW5nIHJlZmVyZW5jZSBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlIGxpYnJhcnkgc3lzdGVtLiBXZSB0aGFuayBBbGFuIEJhd2RlbiwgSm9obiBDb3dhbiwgU2ViYXN0aWFuIEVnbmVyLCBBdWJyZXkgSmFmZmVyLCBTaGlybyBLYXdhaSwgQnJhZGxleSBMdWNpZXIsIGFuZCBBbmRyw6kgdmFuIFRvbmRlciBmb3IgY29udHJpYnV0aW5nIGluc2lnaHRzIG9uIGxhbmd1YWdlIGRlc2lnbi4gTWFyYyBGZWVsZXksIE1hcnRpbiBHYXNiaWNobGVyLCBBdWJyZXkgSmFmZmVyLCBMYXJzIFQgSGFuc2VuLCBSaWNoYXJkIEtlbHNleSwgT2xpbiBTaGl2ZXJzLCBhbmQgQW5kcsOpIHZhbiBUb25kZXIgd3JvdGUgU1JGSXMgdGhhdCBzZXJ2ZWQgYXMgZGlyZWN0IGlucHV0IHRvIHRoZSByZXBvcnQuIE1hcmN1cyBDcmVzdGFuaSwgRGF2aWQgRnJlc2UsIEF6aXogR2h1bG91bSwgQXJ0aHVyIEEuIEdsZWNrbGVyLCBFcmljIEtuYXVlbCwgSm9uYXRoYW4gUmVlcywgYW5kIEFuZHLDqSB2YW4gVG9uZGVyIHRob3JvdWdobHkgcHJvb2ZyZWFkIGVhcmx5IHZlcnNpb25zIG9mIHRoZSByZXBvcnQuCgo+IFdlIHdvdWxkIGFsc28gbGlrZSB0byB0aGFuayB0aGUgZm9sbG93aW5nIHBlb3BsZSBmb3IgdGhlaXIgaGVscCBpbiBjcmVhdGluZyB0aGlzIHJlcG9ydDogTGF1cmkgQWxhbmtvLCBFbGkgQmFyemlsYXksIEFsYW4gQmF3ZGVuLCBCcmlhbiBDLiBCYXJuZXMsIFBlciBCb3RobmVyLCBUcmVudCBCdWNrLCBUaG9tYXMgQnVzaG5lbGwsIFRheWxvciBDYW1wYmVsbCwgTHVkb3ZpYyBDb3VydMOocywgUGFzY2FsIENvc3RhbnphLCBKb2huIENvd2FuLCBSYXkgRGlsbGluZ2VyLCBKZWQgRGF2aXMsIEouQS4g4oCcQmllcOKAnSBEdXJpZXV4LCBDYXJsIEVhc3RsdW5kLCBTZWJhc3RpYW4gRWduZXIsIFRvbSBFbWVyc29uLCBNYXJjIEZlZWxleSwgTWF0dGhpYXMgRmVsbGVpc2VuLCBBbmR5IEZyZWVtYW4sIEtlbiBGcmllZGVuYmFjaCwgTWFydGluIEdhc2JpY2hsZXIsIEFydGh1ciBBLiBHbGVja2xlciwgQXppeiBHaHVsb3VtLCBEYXZlIEd1cm5lbGwsIExhcnMgVCBIYW5zZW4sIEJlbiBIYXJyaXMsIFN2ZW4gSGFydHJ1bXBmLCBEYXZlIEhlcm1hbiwgTmlscyBNLiBIb2xtLCBTdGFuaXNsYXYgSWV2bGV2LCBKYW1lcyBKYWNrc29uLCBBdWJyZXkgSmFmZmVyLCBTaGlybyBLYXdhaSwgQWxleGFuZGVyIEtqZWxkYWFzLCBFcmljIEtuYXVlbCwgTWljaGFlbCBMZW5hZ2hhbiwgRmVsaXggS2xvY2ssIERvbm92YW4gS29sYmx5LCBNYXJjaW4gS293YWxjenlrLCBUaG9tYXMgTG9yZCwgQnJhZGxleSBMdWNpZXIsIFBhdWxvIEouIE1hdG9zLCBEYW4gTXVyZXNhbiwgUnlhbiBOZXd0b24sIEphc29uIE9yZW5kb3JmZiwgRXJpY2ggUmFzdCwgSmVmZiBSZWFkLCBKb25hdGhhbiBSZWVzLCBKb3JnZW4gU2Now6RmZXIsIFBhdWwgU2NobGllLCBNYW51ZWwgU2VycmFubywgT2xpbiBTaGl2ZXJzLCBKb25hdGhhbiBTaGFwaXJvLCBKZW5zIEF4ZWwgU8O4Z2FhcmQsIEpheSBTdWx6YmVyZ2VyLCBQaW5rdSBTdXJhbmEsIE1pa2FlbCBUaWxsZW5pdXMsIFNhbSBUb2Jpbi1Ib2Noc3RhZHQsIERhdmlkIFZhbiBIb3JuLCBBbmRyw6kgdmFuIFRvbmRlciwgUmVpbmRlciBWZXJsaW5kZSwgQWxhbiBXYXRzb24sIEFuZHJldyBXaWxjb3gsIEpvbiBXaWxzb24sIEx5bm4gV2luZWJhcmdlciwgS2VpdGggV3JpZ2h0LCBhbmQgQ2hvbmdrYWkgWmh1LgoKPiBXZSB3b3VsZCBsaWtlIHRvIHRoYW5rIHRoZSBmb2xsb3dpbmcgcGVvcGxlIGZvciB0aGVpciBoZWxwIGluIGNyZWF0aW5nIHRoZSBwcmV2aW91cyByZXZpc2lvbnMgb2YgdGhpcyByZXBvcnQ6IEFsYW4gQmF3ZGVuLCBNaWNoYWVsIEJsYWlyLCBHZW9yZ2UgQ2FycmV0dGUsIEFuZHkgQ3JvbWFydHksIFBhdmVsIEN1cnRpcywgSmVmZiBEYWx0b24sIE9saXZpZXIgRGFudnksIEtlbiBEaWNrZXksIEJydWNlIER1YmEsIE1hcmMgRmVlbGV5LCBBbmR5IEZyZWVtYW4sIFJpY2hhcmQgR2FicmllbCwgWWVrdGEgR8O8cnNlbCwgS2VuIEhhYXNlLCBSb2JlcnQgSGllYiwgUGF1bCBIdWRhaywgTW9ycnkgS2F0eiwgQ2hyaXMgTGluZGJsYWQsIE1hcmsgTWV5ZXIsIEppbSBNaWxsZXIsIEppbSBQaGlsYmluLCBKb2huIFJhbXNkZWxsLCBNaWtlIFNoYWZmLCBKb25hdGhhbiBTaGFwaXJvLCBKdWxpZSBTdXNzbWFuLCBQZXJyeSBXYWdsZSwgRGFuaWVsIFdlaXNlLCBIZW5yeSBXdSwgYW5kIE96YW4gWWlnaXQuCgo+IFdlIHRoYW5rIENhcm9sIEZlc3NlbmRlbiwgRGFuaWVsIEZyaWVkbWFuLCBhbmQgQ2hyaXN0b3BoZXIgSGF5bmVzIGZvciBwZXJtaXNzaW9uIHRvIHVzZSB0ZXh0IGZyb20gdGhlIFNjaGVtZSAzMTEgdmVyc2lvbiA0IHJlZmVyZW5jZSBtYW51YWwuIFdlIHRoYW5rIFRleGFzIEluc3RydW1lbnRzLCBJbmMuIGZvciBwZXJtaXNzaW9uIHRvIHVzZSB0ZXh0IGZyb20gdGhlIFRJIFNjaGVtZSBMYW5ndWFnZSBSZWZlcmVuY2UgTWFudWFsIFsyNl0uIFdlIGdsYWRseSBhY2tub3dsZWRnZSB0aGUgaW5mbHVlbmNlIG9mIG1hbnVhbHMgZm9yIE1JVCBTY2hlbWUgWzIwXSwgVCBbMjFdLCBTY2hlbWUgODQgWzEyXSwgQ29tbW9uIExpc3AgWzI1XSwgQ2hleiBTY2hlbWUgWzhdLCBQTFQgU2NoZW1lIFsxMV0sIGFuZCBBbGdvbCA2MCBbMV0uCgo+IFdlIGFsc28gdGhhbmsgQmV0dHkgRGV4dGVyIGZvciB0aGUgZXh0cmVtZSBlZmZvcnQgc2hlIHB1dCBpbnRvIHNldHRpbmcgdGhpcyByZXBvcnQgaW4gVGVYLCBhbmQgRG9uYWxkIEtudXRoIGZvciBkZXNpZ25pbmcgdGhlIHByb2dyYW0gdGhhdCBjYXVzZWQgaGVyIHRyb3VibGVzLgoKPiBUaGUgQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UgTGFib3JhdG9yeSBvZiB0aGUgTWFzc2FjaHVzZXR0cyBJbnN0aXR1dGUgb2YgVGVjaG5vbG9neSwgdGhlIENvbXB1dGVyIFNjaWVuY2UgRGVwYXJ0bWVudCBvZiBJbmRpYW5hIFVuaXZlcnNpdHksIHRoZSBDb21wdXRlciBhbmQgSW5mb3JtYXRpb24gU2NpZW5jZXMgRGVwYXJ0bWVudCBvZiB0aGUgVW5pdmVyc2l0eSBvZiBPcmVnb24sIGFuZCB0aGUgTkVDIFJlc2VhcmNoIEluc3RpdHV0ZSBzdXBwb3J0ZWQgdGhlIHByZXBhcmF0aW9uIG9mIHRoaXMgcmVwb3J0LiBTdXBwb3J0IGZvciB0aGUgTUlUIHdvcmsgd2FzIHByb3ZpZGVkIGluIHBhcnQgYnkgdGhlIEFkdmFuY2VkIFJlc2VhcmNoIFByb2plY3RzIEFnZW5jeSBvZiB0aGUgRGVwYXJ0bWVudCBvZiBEZWZlbnNlIHVuZGVyIE9mZmljZSBvZiBOYXZhbCBSZXNlYXJjaCBjb250cmFjdCBOMDAwMTQtODAtQy0wNTA1LiBTdXBwb3J0IGZvciB0aGUgSW5kaWFuYSBVbml2ZXJzaXR5IHdvcmsgd2FzIHByb3ZpZGVkIGJ5IE5TRiBncmFudHMgTkNTIDgzLTA0NTY3IGFuZCBOQ1MgODMtMDMzMjUuCg=="},"documentation/README-documentation.md":{"timestamp":1603724548923,"data":""},"documentation/documentation-extensions.js":{"timestamp":1603724548923,"data":""}}