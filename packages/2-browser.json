{"version":"0.1beta","2-browser/LICENSE-browser.md":{"timestamp":1603736935895,"data":"YGJyb3dzZXItZXh0ZW5zaW9ucy5qc2AgaXMgY29weXJpZ2h0IDIwMTgtMjAxOSBieSBBbnRob255IFcuIEh1cnNoIGFuZCBpcyBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIHNhbWUgTUlUIGxpY2Vuc2UgYXMgRnJvbmtlbnN0ZWVuIGFzIGEgd2hvbGUuCg=="},"2-browser/browser.scm":{"timestamp":1603736935896,"data":"KGRlZmluZSAoc2V0LWZhdi1pY29uIGZpbGVuYW1lKQogIChsZXQgKChpbWdkYXRhIChyZWFkLWludGVybmFsLWRhdGEtdXJsIGZpbGVuYW1lKSkpCiAgICAoJSAibGlua1tyZWwqPSdpY29uJ10iICJyZW1vdmUiKQogICAgKCUgImhlYWQiICJhcHBlbmQiIChsaW5rICg8PCAiIXJlbD0nc2hvcnRjdXQgaWNvbichdHlwZT0naW1hZ2UvcG5nJyFocmVmPSIgaW1nZGF0YSAiIikpKQogICkpCg=="},"2-browser/browser-extensions.js":{"timestamp":1603736935896,"data":""}}