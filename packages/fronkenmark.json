{"version":"0.1beta","fronkenmark/LICENSE-fronkenmark.md":{"timestamp":1603739748312,"data":"VGhlIGBmcm9ua2VubWFyay5qc2AgYW5kIGBmcm9ua2VubWFyay12YWxpZGF0b3IudHh0YCBmaWxlcyBhcmUgY29weXJpZ2h0IDIwMjAgYnkgQW50aG9ueSBXLiBIdXJzaCwgYW5kIGFyZSByZWxlYXNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIHNhbWUgTUlUIGxpY2Vuc2UgYXMgRnJvbmtlbnN0ZWVuIGFzIGEgd2hvbGUuCgpUaGUgcm9tYW5pemUgZnVuY3Rpb24gaXMgY29weXJpZ2h0IDIwMDggYnkgU3RldmUgTGV2aXRoYW4sIGFuZCB3YXMgcmVsZWFzZWQgYnkgaGltIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlOgpodHRwOi8vYmxvZy5zdGV2ZW5sZXZpdGhhbi5jb20vYXJjaGl2ZXMvamF2YXNjcmlwdC1yb21hbi1udW1lcmFsLWNvbnZlcnRlcgoKVGhlICJzbWFydCBxdW90ZXMiIHByb2NlZHVyZXMgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYmxha2VnYXJyZXRzb24vc21hcnQtcXVvdGVzLXBsdXMsIHdoaWNoIHdhcyByZWxlYXNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIGZvbGxvd2luZyBNSVQgbGljZW5zZToKCkNvcHlyaWdodCAoYykgMjAxNCBCbGFrZSBULiBHYXJyZXRzb24gYmxha2VAYmxha2VnLm5ldAoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K"},"fronkenmark/fronkenmark.js":{"timestamp":1603739748313,"data":"Ly8gTWFrZSBzdXJlIHdlJ3ZlIGdvdCBhIEZyb25rZW5tYXJrIG9iamVjdCwgcmVnYXJkbGVzcyBvZiBsb2FkIG9yZGVyLgppZih0eXBlb2YgKEZyb25rZW5tYXJrKSA9PT0gInVuZGVmaW5lZCIpewogIEZyb25rZW5tYXJrID0ge307CiAgRnJvbmtlbm1hcmsucHJlU2NyaXB0cyA9IHt9OwogIEZyb25rZW5tYXJrLmN1c3RvbVRhZ3MgPSB7fTsKICBGcm9ua2VubWFyay5zdWJzdGl0dXRpb25zID0ge307Cn0KCkZyb25rZW5tYXJrLmVycm9ycyA9ICIiOwpGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2UgPSAiIjsKRnJvbmtlbm1hcmsubGFuZ3VhZ2VDbGFzcyA9ICIiOwpGcm9ua2VubWFyay5jb3VudGVycyA9IHt9OwpGcm9ua2VubWFyay5ub3RlQ291bnRlciA9IDE7CkZyb25rZW5tYXJrLm5vdGVzID0gW107CkZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlID0gZnVuY3Rpb24odGV4dCl7CiAgbGV0IGlkID0gImZyb25rZW5yZW5kZXIiICsgRnJvbmtlbnN0ZWVuLm5vX2Rhc2hfdXVpZCgpOwogIEZyb25rZW5tYXJrLnN1YnN0aXR1dGlvbnNbaWRdID0gdGV4dDsKICByZXR1cm4gaWQ7Cn0KRnJvbmtlbm1hcmsucHJvY2Vzc0luY2x1ZGUgPSBmdW5jdGlvbih0ZXh0KXsKCn0KRnJvbmtlbm1hcmsucHJvY2Vzc05vdGUgPSBmdW5jdGlvbih0ZXh0KXsKICBsZXQgaWQgPSAiZnJvbmtlbm1hcmtfZm9vdG5vdGUiICsgRnJvbmtlbnN0ZWVuLm5vX2Rhc2hfdXVpZCgpOwogIGxldCBub3RlaWQgPSBGcm9ua2Vuc3RlZW4ubm9fZGFzaF91dWlkKCk7CiAgbGV0IG5vdGVhbmNob3IgPSAibm90ZS1hbmNob3ItIiArIG5vdGVpZDsKICBsZXQgbm90ZWxpbmsgPSAibm90ZS1saW5rLSIgKyBub3RlaWQ7CiAgRnJvbmtlbm1hcmsuc3Vic3RpdHV0aW9uc1tpZF0gPSAiPGEgY2xhc3M9J2Zvb3Rub3RlLWxpbmsgbG9jYWwtbGluaycgaWQ9JyIgKyBub3RlYW5jaG9yICsgIicgaHJlZj0nIyIgKyBub3RlbGluayArICInPjxzdXA+IiArIEZyb25rZW5tYXJrLm5vdGVDb3VudGVyICsgIjwvc3VwPjwvYT4iOwogIEZyb25rZW5tYXJrLm5vdGVzLnB1c2goIjxwPjxhIGNsYXNzPSdmb290bm90ZSBsb2NhbC1saW5rJyBpZD0nIiArIG5vdGVsaW5rICsgIicgaHJlZj0nIyIgKyBub3RlYW5jaG9yICsgIic+IiArICImdWFycjsiICsgRnJvbmtlbm1hcmsubm90ZUNvdW50ZXIgKyAiPC9hPiZuYnNwOyIgKyBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudCh0ZXh0KSArICI8L3A+Iik7CiAgRnJvbmtlbm1hcmsubm90ZUNvdW50ZXIgPSBGcm9ua2VubWFyay5ub3RlQ291bnRlciArIDE7CiAgcmV0dXJuIGlkOwp9CgpGcm9ua2VubWFyay5nZXROb3RlcyA9IGZ1bmN0aW9uKCl7CiAgcmV0dXJuIEZyb25rZW5tYXJrLm1ha2VTdWJzdGl0dXRpb25zKEZyb25rZW5tYXJrLm5vdGVzLmpvaW4oIlxuIikpOwp9CkZyb25rZW5tYXJrLnJlc2V0Tm90ZXMgPSBmdW5jdGlvbigpewogIEZyb25rZW5tYXJrLm5vdGVzID0gW107CiAgRnJvbmtlbm1hcmsubm90ZUNvdW50ZXIgPSAxOwp9CkZyb25rZW5tYXJrLnByb2Nlc3NDb2RlQmxvY2tzID0gZnVuY3Rpb24odGV4dCl7CiAgIC8vIFByb2Nlc3MgdG9wLWxldmVsIFtjb2RlXSBibG9ja3MKICAgbGV0IGxpbmVzID0gdGV4dC5zcGxpdCgiXG4iKTsKICAgIGxldCBvdXRsaW5lcyA9IFtdOwogICAgbGV0IGN1cnJlbnRDb2RlID0gIiI7CiAgICBsZXQgaW5Db2RlID0gZmFsc2U7CiAgICBmb3IodmFyIGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspewogICAgICBsZXQgbGluZSA9IGxpbmVzW2ldOwogICAgICBsZXQgc2luZ2xlbWF0Y2ggPSAgbGluZS5tYXRjaCgvXlxbY29kZSAoLiopIGNvZGVcXSguKikvKTsKICAgICAgaWYoc2luZ2xlbWF0Y2ggIT09IG51bGwpewogICAgICAgICAgb3V0bGluZXMucHVzaChGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSAoIjxjb2RlPiIgKyAgc2luZ2xlbWF0Y2hbMV0udHJpbSgpICsgIjwvY29kZT4iKSArIHNpbmdsZW1hdGNoWzJdKTsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICAgIGxldCBtYXRjaCA9IGxpbmUubWF0Y2goL15cW2NvZGUoLiopLyk7CiAgICAgIGlmKG1hdGNoICE9PSBudWxsKXsKICAgICAgICBGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2UgPSBtYXRjaFsxXS50cmltKCk7CiAgICAgICAgY29uc29sZS5sb2coIkNvZGUgYmxvY2s6IGxhbmd1YWdlIGlzICIgKyBGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2UpCiAgICAgICAgLy8gSGFuZGxlIHN5bnRheCBoaWdobGlnaHRpbmcuCgogICAgICAgICBpZihGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2UgPT09ICIiKXsKICAgICAgICAgICBGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2UgPSAic2NoZW1lIjsKICAgICAgICAgfQogICAgICAgIEZyb25rZW5tYXJrLmxhbmd1YWdlQ2xhc3MgPSAiIGNsYXNzPSdsYW5ndWFnZS0iICsgRnJvbmtlbm1hcmsuY3VycmVudExhbmd1YWdlICsgIiciCiAgICAgICAgY3VycmVudENvZGUgPSAiIjsKICAgICAgICBpID0gaSArIDE7CiAgICAgICAgd2hpbGUobGluZXNbaV0uaW5kZXhPZigiY29kZV0iKSA8IDApewogICAgICAgICAgICBjdXJyZW50Q29kZSA9IGN1cnJlbnRDb2RlICsgbGluZXNbaV0gKyAiXG4iOwogICAgICAgICAgICBpID0gaSArIDE7CiAgICAgICAgICAgIGlmKGkgPT09IGxpbmVzLmxlbmd0aCl7CiAgICAgICAgICAgICAgRnJvbmtlbm1hcmsuZXJyb3JzID0gRnJvbmtlbm1hcmsuZXJyb3JzICsgIlxuRW5kIG9mIHRleHQgaW4gY29kZSBibG9jay4gUG9zc2libHkgbWlzc2luZyBjbG9zaW5nIFtjb2RlXSB0YWcuIgogICAgICAgICAgICAgIHJldHVybiAiIjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZihjdXJyZW50Q29kZSAhPT0gIiIpewogICAgICAgICAgaWYoRnJvbmtlbm1hcmsuaGlnaGxpZ2h0ZXIgIT09IHVuZGVmaW5lZCl7CiAgICAgICAgICAgIGN1cnJlbnRDb2RlID0gRnJvbmtlbm1hcmsuaGlnaGxpZ2h0ZXIoY3VycmVudENvZGUpOwogICAgICAgICAgfQogICAgICAgICAgbGV0IHN1YiA9IEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlICgiPHByZT4iICsgIGN1cnJlbnRDb2RlICsgIjwvcHJlPiIpOwogICAgICAgICAgb3V0bGluZXMucHVzaChzdWIgKyAiXG4iKQogICAgICAgIH0KICAgICAgICBlbHNlewogICAgICAgICAgb3V0bGluZXMucHVzaCgiIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIGVsc2UgewogICAgICAgIG91dGxpbmVzLnB1c2gobGluZSk7CiAgICAgIH0KICAgIH0KICAgIHRleHQgPSBvdXRsaW5lcy5qb2luKCJcbiIpCiAgICByZXR1cm4gdGV4dDsKfQoKRnJvbmtlbm1hcmsucHJvY2Vzc0lubGluZUxhVGVYID0gZnVuY3Rpb24oY29kZSl7CiAgIHJldHVybiBNYXRoSmF4LnRleDJzdmcoY29kZSx7ZGlzcGxheTpmYWxzZX0pLm91dGVySFRNTDsKfQoKRnJvbmtlbm1hcmsucmVtb3ZlQ29tbWVudHMgPSBmdW5jdGlvbih0ZXh0KXsKICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9eOy4qXG4vZ20sIiIpOwogIHJldHVybiB0ZXh0Owp9CgpGcm9ua2VubWFyay5mcm9ua2VubWFyayA9IGZ1bmN0aW9uKHRleHQsdHJ1c3RlZCxhcHBlbmROb3Rlcyl7Ci8vdGV4dCA9IEZyb25rZW5tYXJrLnByb2Nlc3NJbmNsdWRlcyh0ZXh0KQogIEZyb25rZW5tYXJrLnVzZVNtYXJ0UXVvdGVzID0gdHJ1ZTsKICBGcm9ua2VubWFyay5lcnJvcnMgPSAiIgogIC8vIEZpcnN0IHNlcGFyYXRlIG91dCBjb2RlIGJsb2NrcyB0byBiZSByZW5kZXJlZCB2ZXJiYXRpbS4KICB0ZXh0ID0gRnJvbmtlbm1hcmsucHJvY2Vzc0NvZGVCbG9ja3ModGV4dCk7CiAgLy8gSGFuZGxlIGJhY2tzbGFzaC1lc2NhcGVkIHRhZ3MuCiAgdGV4dCA9IHRleHQucmVwbGFjZSgvXFxcWy9nLCBmdW5jdGlvbihtYXRjaCl7CiAgcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCdbJyk7CiAgICByZXR1cm4gaWQ7CiAgfSkKICB0ZXh0ID0gRnJvbmtlbm1hcmsucHJvY2Vzc1NjcmlwdHModGV4dCx0cnVzdGVkKTsKICB0ZXh0ID0gRnJvbmtlbm1hcmsucHJvY2Vzc0ltYWdlcyh0ZXh0KTsKICB0ZXh0ID0gRnJvbmtlbm1hcmsucHJvY2Vzc0F1ZGlvKHRleHQpOwogIHRleHQgPSBGcm9ua2VubWFyay5wcm9jZXNzVmlkZW8odGV4dCk7CiAgdGV4dCA9IEZyb25rZW5tYXJrLnJlbW92ZUNvbW1lbnRzKHRleHQpOwogIC8vIFJlbW92ZSBvdGhlciBlc2NhcGVkIGNoYXJzLgogIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xcKC4pL2csIGZ1bmN0aW9uKG1hdGNoLGMpewogICAgcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKGMpOwogIH0pCiAgdGV4dCA9IHRleHQucmVwbGFjZSgvXFtub3NtYXJ0XF0vZywgZnVuY3Rpb24obWF0Y2gpewogICAgRnJvbmtlbm1hcmsudXNlU21hcnRRdW90ZXMgPSBmYWxzZTsKICAgIHJldHVybiAiIgogIH0pCiAgaWYoRnJvbmtlbm1hcmsudXNlU21hcnRRdW90ZXMgPT09IHRydWUpewogICAgdGV4dCA9IEZyb25rZW5zdGVlbi5zbWFydFF1b3Rlcyh0ZXh0KQogIH0KICBsZXQgcGFyYWdyYXBocyA9IHRleHQuc3BsaXQoIlxuXG4iKTsKICBmb3IodmFyIGkgPSAwOyBpIDwgcGFyYWdyYXBocy5sZW5ndGg7IGkrKyl7CiAgICAgcGFyYWdyYXBoc1tpXSA9IEZyb25rZW5tYXJrLnByb2Nlc3NQYXJhZ3JhcGgocGFyYWdyYXBoc1tpXSkKICB9CiAgdGV4dCA9IHBhcmFncmFwaHMuam9pbigiXG4iKQogIHRleHQgPSBGcm9ua2VubWFyay5tYWtlU3Vic3RpdHV0aW9ucyh0ZXh0KTsKICBpZihhcHBlbmROb3RlcyA9PT0gdHJ1ZSl7CiAgICB0ZXh0ID0gdGV4dCArIEZyb25rZW5tYXJrLmdldE5vdGVzKCk7CiAgICBGcm9ua2VubWFyay5yZXNldE5vdGVzKCkKICB9CiAgcmV0dXJuIHRleHQ7IC8vRnJvbmtlbnN0ZWVuLnNtYXJ0UXVvdGVzKHRleHQpCgp9CkZyb25rZW5tYXJrLm1ha2VTdWJzdGl0dXRpb25zID0gZnVuY3Rpb24odGV4dCl7CiAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhGcm9ua2VubWFyay5zdWJzdGl0dXRpb25zKTsKICBmb3IodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKyl7CiAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKGtleXNbaV0sRnJvbmtlbm1hcmsuc3Vic3RpdHV0aW9uc1trZXlzW2ldXSkKICB9CiAgcmV0dXJuIHRleHQ7Cn0KRnJvbmtlbm1hcmsucmVuZGVyVGFibGVJdGVtcyA9IGZ1bmN0aW9uKHRleHQpewogIGxldCB0ZW1wbGF0ZSA9IFtdOwogIGxldCByb3dzID0gdGV4dC5zcGxpdCgiXG4iKQogIHdoaWxlKHJvd3NbMF0ubWF0Y2goL1teaGxyY10vKSA9PT0gbnVsbCl7CiAgICBsZXQgZm9ybWF0cm93ID0gcm93cy5zaGlmdCgpOwogICAgdGVtcGxhdGUucHVzaChmb3JtYXRyb3cuc3BsaXQoIiIpKQogIH0KICB0ZXh0ID0gcm93cy5qb2luKCJcbiIpOwogIHJvd3MgPSBQYXBhLnBhcnNlKHRleHQpLmRhdGE7CiAgaWYocm93cy5sZW5ndGggPT09IDApewogICAgY29uc29sZS5sb2coIkZyb25rZW5tYXJrLnJlbmRlclRhYmxlSXRlbXM6IHRhYmxlIGhhZCBubyBkYXRhIik7CiAgICByZXR1cm4gIiI7CiAgfQogIGxldCByZXN1bHQgPSAiPHRib2R5PiI7CiAgd2hpbGUodGVtcGxhdGUubGVuZ3RoIDwgcm93cy5sZW5ndGgpewogICAgdGVtcGxhdGUucHVzaChbXSk7CiAgfQogIGNvbnNvbGUubG9nKCJ0ZW1wbGF0ZSBpcyAiICsgdGVtcGxhdGUpOwogIGNvbnNvbGUubG9nKCJ0ZW1wbGF0ZSBsZW5ndGg6ICIgKyB0ZW1wbGF0ZS5sZW5ndGgpCiAgZm9yKHZhciBpID0gMDsgaSA8IHJvd3MubGVuZ3RoOyBpKyspewogICAgbGV0IHJvdyA9IHJvd3NbaV07CiAgICBsZXQgdGVtcGxhdGVyb3cgPSB0ZW1wbGF0ZVtpXTsKICAgIHdoaWxlKHRlbXBsYXRlcm93Lmxlbmd0aCA8IHJvdy5sZW5ndGgpewogICAgICAgIHRlbXBsYXRlcm93LnB1c2goInIiKTsKICAgIH0KICAgIHJlc3VsdCA9IHJlc3VsdCArICI8dHI+IgogICAgZm9yKHZhciBjb2wgPSAwOyBjb2wgPCByb3cubGVuZ3RoOyBjb2wrKyl7CiAgICAgIGxldCBmb3JtYXRjaGFyID0gdGVtcGxhdGVyb3dbY29sXQogICAgICBzd2l0Y2goZm9ybWF0Y2hhcil7CiAgICAgICAgY2FzZSAiaCI6IHJlc3VsdCA9IHJlc3VsdCArICI8dGg+IiArIHJvd1tjb2xdICsgIjwvdGg+IgogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJyIjogcmVzdWx0ID0gcmVzdWx0ICsgIjx0ZCBzdHlsZT0ndGV4dC1hbGlnbjpyaWdodDsnPiIgKyByb3dbY29sXSArICI8L3RkPiIKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAibCI6IHJlc3VsdCA9IHJlc3VsdCArICI8dGQgc3R5bGU9J3RleHQtYWxpZ246bGVmdDsnPiIgKyByb3dbY29sXSArICI8L3RkPiIKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiYyI6IHJlc3VsdCA9IHJlc3VsdCArICI8dGQgc3R5bGU9J3RleHQtYWxpZ246Y2VudGVyOyc+IiArIHJvd1tjb2xdICsgIjwvdGQ+IgogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OiBhbGVydCgiVW5yZWNvZ25pemVkIGZvcm1hdCBjaGFyYWN0ZXIgaW4gdGFibGU6IiArIGZvcm1hdGNoYXIpCiAgICAgICAgICAgICAgICAgIHJldHVybiAiIjsKICAgICAgfQogICAgfQogICAgcmVzdWx0ID0gcmVzdWx0ICsgIjwvdHI+XG4iCiAgfQogIHJlc3VsdCA9IHJlc3VsdCArICI8L3Rib2R5PlxuIgogIHJldHVybiByZXN1bHQ7Cn0KCkZyb25rZW5tYXJrLnJlbmRlckxpc3RJdGVtcyA9IGZ1bmN0aW9uKHRleHQsY3NzX2NsYXNzKXsKICBsZXQgaXRlbXMgPSB0ZXh0LnNwbGl0KCJcbiIpOwogIGxldCByZXN1bHQgPSAiIgogIGxldCBjbGFzc3N0cmluZzsKICBpZihjc3NfY2xhc3MgIT09IHVuZGVmaW5lZCl7CiAgICBjbGFzc3N0cmluZyA9ICIgY2xhc3M9JyIgKyBjc3NfY2xhc3MgKyAiJyIKICB9CiAgZWxzZSB7CiAgICBjbGFzc3N0cmluZyA9ICIiCiAgfQogIGZvcih2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKyl7CiAgICBsZXQgaXRlbSA9IEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGl0ZW1zW2ldLnRyaW0oKSk7CiAgICBpZihpdGVtICE9PSAiIil7CiAgICAgIHJlc3VsdCA9IHJlc3VsdCArICI8bGkiICsgY2xhc3NzdHJpbmcgKyAiPiIgKyBpdGVtc1tpXS50cmltKCkgKyAiPC9saT5cbiIKICAgIH0KICB9CiAgcmV0dXJuIHJlc3VsdDsKfQpGcm9ua2VubWFyay5mb3JtYXRQb2V0cnkgPSBmdW5jdGlvbih0ZXh0KXsKICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC8gL2csIiZuYnNwOyIpOwogIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xuL2csIjxiciAvPlxuIik7CiAgcmV0dXJuIHRleHQ7Cn0KRnJvbmtlbm1hcmsucHJvY2Vzc1BhcmFncmFwaCA9IGZ1bmN0aW9uKHRleHQpewogIHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPHA+IikgKyBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudCh0ZXh0KSArIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3A+IikKICAvL3JldHVybiBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudCh0ZXh0KTsKfQpGcm9ua2VubWFyay5wcm9jZXNzU2NyaXB0cyAgPSBmdW5jdGlvbih0ZXh0LHRydXN0ZWQpewogdGV4dCA9IHRleHQucmVwbGFjZSgvXFshKFthLXpBLVpdW2EtekEtWjAtOV0qKVtcc10oW1xzXFNdKj8pW1xzXVwxIVxdL2dtLGZ1bmN0aW9uKG1hdGNoLHRhZyxjb2RlKSB7CiAgICAgIGlmKEZyb25rZW5tYXJrLnByZVNjcmlwdHNbdGFnXSAhPT0gdW5kZWZpbmVkKXsKICAgICAgICAgIHJldHVybiBGcm9ua2VubWFyay5wcmVTY3JpcHRzW3RhZ10oY29kZSx0cnVzdGVkKTsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICByZXR1cm4gIk5vIGhhbmRsZXIgZGVmaW5lZCBmb3IgcHJlc2NyaXB0IHR5cGU6IFshIiArIHRhZzsKICAgICAgfQogIH0pCiAgcmV0dXJuIHRleHQ7Cn0KRnJvbmtlbm1hcmsucHJvY2Vzc0ltYWdlcyAgPSBmdW5jdGlvbih0ZXh0KXsKIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xbaW1nIChbXHNcU10qPykgaW1nXF0vZ20sZnVuY3Rpb24obWF0Y2gsY29kZSl7CiAgIGxldCBpbWdwYXJ0cyA9IGNvZGUuc3BsaXQoIiAiKQogICBsZXQgaW1ndGFyZ2V0ID0gaW1ncGFydHMuc2hpZnQoKTsKICAgbGV0IGltZ3NyYyA9ICIhc3JjPSIKICAgaWYoaW1ndGFyZ2V0Lm1hdGNoKC9eW2EtekEtWjAtOV0rXDpcL1wvLykgIT09IG51bGwpewogICAgIC8vIEV4dGVybmFsIGltZzsKICAgICBpbWdzcmMgPSBpbWdzcmMgKyAiJyIgKyBpbWd0YXJnZXQgKyAiJyIKICAgfQogICBlbHNlewogICAgIGltZ3NyYyA9IGltZ3NyYyArICInIiArIEZyb25rZW5zdGVlbi5yZWFkSW50ZXJuYWxGaWxlRGF0YVVSTCgidXNlci1maWxlcy93aWtpLyIgKyBpbWd0YXJnZXQpICsgIiciCiAgIH0KICAgbGV0IGltZ3NlbWw7CiAgIGlmKGltZ3BhcnRzLmxlbmd0aCA+IDApewogICAgIGltZ3NlbWwgPSBpbWdwYXJ0cy5qb2luKCcgJykKICAgfQogICBlbHNlIGltZ3NlbWwgPSAiIjsKICAgaW1nc2VtbCA9IGltZ3NlbWwgKyBpbWdzcmM7CiAgIHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPGltZyAiICsgRnJvbmtlbnN0ZWVuLnBhcnNlX3NlbWwoaW1nc2VtbCkgKyAiIC8+IikKIH0pCiByZXR1cm4gdGV4dDsKfQoKRnJvbmtlbm1hcmsucHJvY2Vzc0F1ZGlvICA9IGZ1bmN0aW9uKHRleHQpewogdGV4dCA9IHRleHQucmVwbGFjZSgvXFthdWRpbyAoW1xzXFNdKj8pIGF1ZGlvXF0vZ20sZnVuY3Rpb24obWF0Y2gsY29kZSl7CiAgIGxldCBhdWRpb3BhcnRzID0gY29kZS5zcGxpdCgiICIpCiAgIGxldCBhdWRpb3RhcmdldCA9IGF1ZGlvcGFydHMuc2hpZnQoKTsKICAgbGV0IGF1ZGlvc3JjID0gIiIKICAgaWYoYXVkaW90YXJnZXQubWF0Y2goL15bYS16QS1aMC05XStcOlwvXC8vKSAhPT0gbnVsbCl7CiAgICAgLy8gRXh0ZXJuYWwgYXVkaW87CiAgICAgYXVkaW9zcmMgPSBhdWRpb3NyYyArICInIiArIGF1ZGlvdGFyZ2V0ICsgIiciCiAgIH0KICAgZWxzZXsKICAgICBhdWRpb3NyYyA9IGF1ZGlvc3JjICsgIiciICsgRnJvbmtlbnN0ZWVuLnJlYWRJbnRlcm5hbEZpbGVEYXRhVVJMKCJ1c2VyLWZpbGVzL3dpa2kvIiArIGF1ZGlvdGFyZ2V0KSArICInIgogICB9CiAgIGxldCBhdWRpb3NlbWw7CiAgIGlmKGF1ZGlvcGFydHMubGVuZ3RoID4gMCl7CiAgICAgYXVkaW9zZW1sID0gYXVkaW9wYXJ0cy5qb2luKCcgJykKICAgfQogICBlbHNlIGF1ZGlvc2VtbCA9ICIiOwogICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxhdWRpbyBjbGFzcz0nd2lraS1hdWRpbycgY29udHJvbHMgIiArIEZyb25rZW5zdGVlbi5wYXJzZV9zZW1sKGF1ZGlvc2VtbCkgKyAiPiIgKyAiPHNvdXJjZSBzcmM9IiArIGF1ZGlvc3JjICsgInR5cGU9J2F1ZGlvL21wZWcnPjwvYXVkaW8+IikKIH0pCiByZXR1cm4gdGV4dDsKfQoKRnJvbmtlbm1hcmsucHJvY2Vzc1ZpZGVvICA9IGZ1bmN0aW9uKHRleHQpewogdGV4dCA9IHRleHQucmVwbGFjZSgvXFt2aWRlbyAoW1xzXFNdKj8pIHZpZGVvXF0vZ20sZnVuY3Rpb24obWF0Y2gsY29kZSl7CiAgIGxldCB2aWRlb3BhcnRzID0gY29kZS5zcGxpdCgiICIpCiAgIGxldCB2aWRlb3RhcmdldCA9IHZpZGVvcGFydHMuc2hpZnQoKTsKICAgbGV0IHZpZGVvc3JjID0gIiIKICAgaWYodmlkZW90YXJnZXQubWF0Y2goL15bYS16QS1aMC05XStcOlwvXC8vKSAhPT0gbnVsbCl7CiAgICAgLy8gRXh0ZXJuYWwgdmlkZW87CiAgICAgdmlkZW9zcmMgPSB2aWRlb3NyYyArICInIiArIHZpZGVvdGFyZ2V0ICsgIiciCiAgIH0KICAgZWxzZXsKICAgICB2aWRlb3NyYyA9IHZpZGVvc3JjICsgIiciICsgRnJvbmtlbnN0ZWVuLnJlYWRJbnRlcm5hbEZpbGVEYXRhVVJMKCJ1c2VyLWZpbGVzL3dpa2kvIiArIHZpZGVvdGFyZ2V0KSArICInIgogICB9CiAgIGxldCB2aWRlb3NlbWw7CiAgIGlmKHZpZGVvcGFydHMubGVuZ3RoID4gMCl7CiAgICAgdmlkZW9zZW1sID0gdmlkZW9wYXJ0cy5qb2luKCcgJykKICAgfQogICBlbHNlIHZpZGVvc2VtbCA9ICIiOwogICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjx2aWRlbyBjbGFzcz0nd2lraS12aWRlbycgY29udHJvbHMgIiArIEZyb25rZW5zdGVlbi5wYXJzZV9zZW1sKHZpZGVvc2VtbCkgKyAiPiIgKyAiPHNvdXJjZSBzcmM9IiArIHZpZGVvc3JjICsgInR5cGU9J3ZpZGVvL21wNCc+PC92aWRlbz4iKQogfSkKIHJldHVybiB0ZXh0Owp9CgpGcm9ua2VubWFyay5nZXRDb3VudGVyID0gZnVuY3Rpb24oY291bnRlcm5hbWUpewogIGlmKEZyb25rZW5tYXJrLmNvdW50ZXJzW2NvdW50ZXJuYW1lXSA9PT0gdW5kZWZpbmVkKXsKICAgIEZyb25rZW5tYXJrLmNvdW50ZXJzW2NvdW50ZXJuYW1lXSA9IDA7CiAgfQogIEZyb25rZW5tYXJrLmNvdW50ZXJzW2NvdW50ZXJuYW1lXSA9IEZyb25rZW5tYXJrLmNvdW50ZXJzW2NvdW50ZXJuYW1lXSArIDE7CiAgcmV0dXJuIEZyb25rZW5tYXJrLmNvdW50ZXJzW2NvdW50ZXJuYW1lXTsKfQoKRnJvbmtlbm1hcmsucHJvY2Vzc0hhc2hUYWdzID0gZnVuY3Rpb24odGV4dCl7CiAgdGV4dCA9IHRleHQucmVwbGFjZSgvKF58XHMpXCMoW2EtekEtWjAtOV0rKS9nbSxmdW5jdGlvbihtYXRjaCxzZXBhcmF0b3IsdGFnKXsKICAgICAgcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKHNlcGFyYXRvciArICI8c3BhbiBjbGFzcz0naGFzaGxpbmsgbGluaycgdGFyZ2V0PScjIiArIHRhZyArICInIHRpdGxlPSdoYXNodGFnIGxpbmsgdG8gIyIgKyB0YWcgKyAiJz4jIiArIHRhZyArICI8L3NwYW4+Iik7CiAgfSkKICByZXR1cm4gdGV4dDsKfQpGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudCAgPSBmdW5jdGlvbih0ZXh0KXsKIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xbYnJcXS9nLCBmdW5jdGlvbihtYXRjaCl7CiAgIHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPGJyIC8+IikKIH0pCiB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cW2hyXF0vZywgZnVuY3Rpb24obWF0Y2gpewogICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxociAvPiIpCiB9KQoKIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xbcGFnZWJyZWFrXF0vZywgZnVuY3Rpb24obWF0Y2gpewogICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD48cCBzdHlsZT0ncGFnZS1icmVhay1hZnRlcjphbHdheXM7Jz48L3A+PHA+IikKIH0pCiB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cW2NvdW50ZXIgKFthLXpBLVpdWzAtOWEtei1BLVpdKilcXS9nLCBmdW5jdGlvbihtYXRjaCwgY291bnRlcm5hbWUpewogICByZXR1cm4gRnJvbmtlbm1hcmsuZ2V0Q291bnRlcihjb3VudGVybmFtZSkKIH0pCiB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cW3JvbWFuY291bnRlciAoW2EtekEtWl1bMC05YS16LUEtWl0qKVxdL2csIGZ1bmN0aW9uKG1hdGNoLCBjb3VudGVybmFtZSl7CiAgIHJldHVybiBGcm9ua2VubWFyay5yb21hbml6ZShGcm9ua2VubWFyay5nZXRDb3VudGVyKGNvdW50ZXJuYW1lKSxmYWxzZSk7CiB9KQogdGV4dCA9IHRleHQucmVwbGFjZSgvXFtSb21hbmNvdW50ZXIgKFthLXpBLVpdWzAtOWEtei1BLVpdKilcXS9nLCBmdW5jdGlvbihtYXRjaCwgY291bnRlcm5hbWUpewogICByZXR1cm4gRnJvbmtlbm1hcmsucm9tYW5pemUoRnJvbmtlbm1hcmsuZ2V0Q291bnRlcihjb3VudGVybmFtZSksdHJ1ZSk7CiB9KQogdGV4dCA9IHRleHQucmVwbGFjZSgvXFtyZXNldGNvdW50ZXIgKFthLXpBLVpdWzAtOWEtei1BLVpdKilcXS9nLCBmdW5jdGlvbihtYXRjaCwgY291bnRlcm5hbWUpewogICBGcm9ua2VubWFyay5yZXNldENvdW50ZXIoY291bnRlcm5hbWUpOwogICByZXR1cm4gIiIKIH0pCiB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cW3Jlc2V0Y291bnRlcnNcXS9nLCBmdW5jdGlvbihtYXRjaCwgY291bnRlcm5hbWUpewogICBGcm9ua2VubWFyay5yZXNldENvdW50ZXJzKCk7CiAgIHJldHVybiAiIgogfSkKIHRleHQgPSBGcm9ua2VubWFyay5wcm9jZXNzSGFzaFRhZ3ModGV4dCk7CiB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cWyhbYS16QS1aXVthLXpBLVowLTldKilccyhbXHNcU10qPylcc1wxXF0vZ20sZnVuY3Rpb24obWF0Y2gsdGFnLGNvZGUpIHsKICAgIHN3aXRjaCh0YWcpewovLyBSZWd1bGFyIEhUTUwgZWxlbWVudHMuCiAgICAgIGNhc2UgImkiOgogICAgICBjYXNlICJiIjoKICAgICAgY2FzZSAic3Ryb25nIjoKICAgICAgY2FzZSAiZW0iOgogICAgICBjYXNlICJoMSI6CiAgICAgIGNhc2UgImgyIjoKICAgICAgY2FzZSAiaDMiOgogICAgICBjYXNlICJoNCI6CiAgICAgIGNhc2UgImg1IjoKICAgICAgY2FzZSAiaDYiOgogICAgICBjYXNlICJsaSI6CiAgICAgIGNhc2UgImJxIjoKICAgICAgY2FzZSAic3VwIjoKICAgICAgY2FzZSAic3ViIjoKICAgICAgY2FzZSAic3RyaWtlIjoKICAgICAgY2FzZSAidSI6CiAgICAgIHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPCIgKyB0YWcgKyAiPiIpICsgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC8iICsgdGFnICsgIj4iKTsKCi8vIElubGluZSBMYVRlWAogICAgY2FzZSAibGF0ZXgiIDogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKEZyb25rZW5tYXJrLnByb2Nlc3NJbmxpbmVMYVRlWChjb2RlKSkKLy8gUGFyYWdyYXBoIHN0eWxlcwogICAgICBjYXNlICJwIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3A+PHA+IikgKyAgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyAgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD48cD4iKTsKICAgICAgY2FzZSAicGMiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD48cCBzdHlsZT0ndGV4dC1hbGlnbjpjZW50ZXI7Jz4iKSArICBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSArICBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9wPjxwPiIpOwogICAgICBjYXNlICJwbCI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9wPjxwIHN0eWxlPSd0ZXh0LWFsaWduOmxlZnQ7Jz4iKSArICBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSArICBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9wPjxwPiIpOwogICAgICBjYXNlICJwciI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9wPjxwIHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0Oyc+IikgKyAgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyAgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD48cD4iKTsKICAgICAgY2FzZSAicGoiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD48cCBzdHlsZT0ndGV4dC1hbGlnbjpqdXN0aWZ5Oyc+IikgKyAgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyAgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD48cD4iKTsKICAgICAgY2FzZSAicGlkIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3A+PHAgaWQ9JyIgKyBjb2RlICsgIic+PC9wPjxwPiIpCiAgICAgIGNhc2UgInBvZXRyeSI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9wPjxwIHN0eWxlPSdtYXJnaW46MCBhdXRvOycgY2xhc3M9J2Zyb25rZW4tcG9ldHJ5Jz4iKSArICBGcm9ua2VubWFyay5mb3JtYXRQb2V0cnkoRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3A+PHA+Iik7Ci8vIExpc3RzCiAgICAgIGNhc2UgIm9sIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8b2w+IikgKyBGcm9ua2VubWFyay5yZW5kZXJMaXN0SXRlbXMoIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpKSArIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L29sPiIpCiAgICAgIGNhc2UgInVsIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8dWw+IikgKyBGcm9ua2VubWFyay5yZW5kZXJMaXN0SXRlbXMoRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkpICsgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvdWw+IikKICAgICAgY2FzZSAicm91bmRsaXN0IjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8dWwgY2xhc3M9J3JvdW5kLWxpc3QnPiIpICsgRnJvbmtlbm1hcmsucmVuZGVyTGlzdEl0ZW1zKEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpLCAicm91bmQtbGlzdC1pdGVtIikgKyBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC91bD4iKQoKLy8gIGlubGluZSBjb2RlIGJsb2NrcwogICAgY2FzZSAiY29kZSI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPGNvZGU+IiArIGNvZGUgKyAiPC9jb2RlPiIpCi8vIFRhYmxlcwogICAgIGNhc2UgInRhYmxlIiA6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPHRhYmxlPiIpICsKICAgICAgRnJvbmtlbm1hcmsucmVuZGVyVGFibGVJdGVtcyhGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSkgKyBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC90YWJsZT4iKTsKCi8vIEZvbnQgc2l6ZXMgYW5kIHZhcmlhbnRzLgogICAgICBjYXNlICJkcm9wY2FwIjoKICAgICAgICAgIGxldCBjYXBjb250ZW50ID0gRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSk7CiAgICAgICAgICBpZihjYXBjb250ZW50Lmxlbmd0aCA8IDEpewogICAgICAgICAgICByZXR1cm4gImRyb3BjYXA6IG5vdGhpbmcgdG8gcHJvY2Vzcy4iCiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIGNsYXNzPSdkcm9wY2FwJz4iKSArIGNhcGNvbnRlbnQuY2hhckF0KDApICArICBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9zcGFuPiIpICsgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIHN0eWxlPSdmb250LXZhcmlhbnQ6c21hbGwtY2FwczsnPiIpICsgIGNhcGNvbnRlbnQuc3Vic3RyaW5nKDEpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgInNjIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8c3BhbiBzdHlsZT0nZm9udC12YXJpYW50OnNtYWxsLWNhcHM7Jz4iKSArICBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSArICBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9zcGFuPiIpOwoKICAgICAgY2FzZSAidGlueSI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPHNwYW4gc3R5bGU9J2ZvbnQtc2l6ZTo1MCU7Jz4iKSArICBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSArICBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9zcGFuPiIpOwogICAgICBjYXNlICJzY3JpcHRzaXplIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8c3BhbiBzdHlsZT0nZm9udC1zaXplOjY2LjclOyc+IikgKyAgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyAgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvc3Bhbj4iKTsKICAgICAgY2FzZSAiZm9vdG5vdGVzaXplIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8c3BhbiBzdHlsZT0nZm9udC1zaXplOjgyLjUlOyc+IikgKyAgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyAgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvc3Bhbj4iKTsKICAgICAgY2FzZSAic21hbGxzaXplIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8c3BhbiBzdHlsZT0nZm9udC1zaXplOjkwJTsnPiIpICsgIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgIm5vcm1hbHNpemUiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIHN0eWxlPSdmb250LXNpemU6MTAwJTsnPiIpICsgIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgImxhcmdlIjogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8c3BhbiBzdHlsZT0nZm9udC1zaXplOjEyNSU7Jz4iKSArICBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSArICBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPC9zcGFuPiIpOwogICAgICBjYXNlICJMYXJnZSI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPHNwYW4gc3R5bGU9J2ZvbnQtc2l6ZToxNDAlOyc+IikgKyAgRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSkgKyAgRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvc3Bhbj4iKTsKICAgICAgY2FzZSAiTEFSR0UiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIHN0eWxlPSdmb250LXNpemU6MTY3JTsnPiIpICsgIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgImh1Z2UiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIHN0eWxlPSdmb250LXNpemU6MTkwJTsnPiIpICsgIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgIkh1Z2UiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIHN0eWxlPSdmb250LXNpemU6MjAwJTsnPiIpICsgIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgIkhVR0UiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxzcGFuIHN0eWxlPSdmb250LXNpemU6MjMwJTsnPiIpICsgIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGNvZGUpICsgIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8L3NwYW4+Iik7CiAgICAgIGNhc2UgImxpbmsiOgogICAgICAgICAgICAgICAgICBsZXQgbGlua3BhcnRzID0gY29kZS5zcGxpdCgifCIpOwogICAgICAgICAgICAgICAgICBpZihsaW5rcGFydHMubGVuZ3RoID09PSAxKXsKICAgICAgICAgICAgICAgICAgICBsaW5rcGFydHMucHVzaChsaW5rcGFydHNbMF0pCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgbGV0IGxpbmt0YXJnZXQgPSBsaW5rcGFydHMuc2hpZnQoKTsKICAgICAgICAgICAgICAgICAgbGV0IGxpbmt0ZXh0ID0gbGlua3BhcnRzLmpvaW4oInwiKTsKICAgICAgICAgICAgICAgICAgbGV0IGxpbmtjbGFzczsKICAgICAgICAgICAgICAgICAgbGV0IHRpdGxldGV4dDsKICAgICAgICAgICAgICAgICAgaWYobGlua3RhcmdldC5tYXRjaCgvXlthLXpBLVowLTldK1w6XC9cLy8pICE9PSBudWxsKXsKICAgICAgICAgICAgICAgICAgICAvLyBFeHRlcm5hbCBsaW5rOwogICAgICAgICAgICAgICAgICAgIGxpbmtjbGFzcyA9ICdleHRlcm5hbGxpbmsgbGluayc7CiAgICAgICAgICAgICAgICAgICAgdGl0bGV0ZXh0ID0gImV4dGVybmFsIGxpbmsgdG8gIiArIGxpbmt0YXJnZXQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgbGlua2NsYXNzID0gJ3dpa2lsaW5rIGxpbmsnOwogICAgICAgICAgICAgICAgICAgIHRpdGxldGV4dCA9ICd3aWtpIGxpbmsgdG8gJyArIGxpbmt0YXJnZXQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKCI8c3BhbiBjbGFzcz0nIiArIGxpbmtjbGFzcyArICInIHRhcmdldD0nIiArIGxpbmt0YXJnZXQgKyAiJyB0aXRsZT0nIiArIHRpdGxldGV4dCArICInPiIgKyBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChsaW5rdGV4dCkgKyAiPC9zcGFuPiIpOwoKCi8vIE1pc2MuCiAgICAgIGNhc2UgInNjZW5lYnJlYWsiOiByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjwvcD5cbjxwIHN0eWxlPSd0ZXh0LWFsaWduOmNlbnRlcjsnPiIgKyBGcm9ua2VubWFyay5wcm9jZXNzQ29udGVudChjb2RlKSArICI8L3A+PHA+XG4iKTsKICAgICAgY2FzZSAiYW5jaG9yIiA6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgiPGEgaWQ9JyIgKyBjb2RlICsgIicvPiIpOwogICAgICBjYXNlICJidXR0b24iIDogbGV0IGJ1dHRvbl9wYXJ0cyA9IGNvZGUuc3BsaXQoIiAiKTsKICAgICAgICAgICAgICAgICAgICAgIGxldCBidXR0b25faWQgPSBidXR0b25fcGFydHMuc2hpZnQoKTsKICAgICAgICAgICAgICAgICAgICAgIGxldCBidXR0b25fY2FwdGlvbiA9IGJ1dHRvbl9wYXJ0cy5qb2luKCIgICIpCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxidXR0b24gaWQ9JyIgKyBidXR0b25faWQgKyAiJz4iKSArIEZyb25rZW5tYXJrLnByb2Nlc3NDb250ZW50KGJ1dHRvbl9jYXB0aW9uKSArICI8L2J1dHRvbj4iOwogICAgICBjYXNlICJpbnB1dCIgOiBsZXQgaW5wdXRfcGFydHMgPSBjb2RlLnNwbGl0KCIgIik7CiAgICAgICAgICAgICAgICAgICAgICBsZXQgaW5wdXRfaWQgPSBpbnB1dF9wYXJ0cy5zaGlmdCgpOwogICAgICAgICAgICAgICAgICAgICAgbGV0IGlucHV0X2NvbnRlbnQgPSBpbnB1dF9wYXJ0cy5qb2luKCIgICIpCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRnJvbmtlbm1hcmsuaW5zdGFsbFN1YnN0aXR1dGUoIjxpbnB1dCB0eXBlPSd0ZXh0JyAgaWQ9JyIgKyBpbnB1dF9pZCArICInIiArICJ2YWx1ZT0nIiArIGlucHV0X2NvbnRlbnQgKyAiJy8+Iik7CiAgICAgIGNhc2UgIm5vdGUiIDogcmV0dXJuIEZyb25rZW5tYXJrLnByb2Nlc3NOb3RlKGNvZGUpOwogICAgICBjYXNlICJpY29uIiA6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZSgKICAgICAgICAiPGltZyBjbGFzcz0naWNvbicgc3JjPSciICsgRnJvbmtlbnN0ZWVuLnJlYWRJbnRlcm5hbEZpbGVEYXRhVVJMKCJvcGVuLWljb25pYy8iICsgY29kZSArICIuc3ZnIikgKyAiJyBhbHQ9JyIgKyBjb2RlICsgIicvPiIpOwogICAgLy8gIGNhc2UgImljb24iIDogcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKAogICAgICAvLyAgIjxzcGFuIGNsYXNzPSdpY29uJz48aSBjbGFzcz0nZmFyIGZhLSIgKyBjb2RlICsgIic+PC9pPjwvc3Bhbj4iKTsKICAgICAgY2FzZSAiZHJvcGNhcCI6IHJldHVybiBGcm9ua2VubWFyay5pbnN0YWxsU3Vic3RpdHV0ZShGcm9ua2VubWFyay5nZW5lcmF0ZURyb3BDYXAoY29kZSkpOwogICAgICBkZWZhdWx0OiBpZihGcm9ua2VubWFyay5jdXN0b21UYWdzW3RhZ10gIT09IHVuZGVmaW5lZCl7CiAgICAgICAgICBjb25zb2xlLmxvZygiSW52b2tpbmcgY3VzdG9tIGhhbmRsZXI6ICIgKyBGcm9ua2VubWFyay5jdXN0b21UYWdzW3RhZ10pCiAgICAgICAgICBsZXQgaW50cDIgPSBuZXcgQml3YVNjaGVtZS5JbnRlcnByZXRlcihGcm9ua2Vuc3RlZW4uc2NoZW1lX2ludGVwcmV0ZXIpOwogICAgICAgICAgcmV0dXJuIGludHAyLmludm9rZV9jbG9zdXJlKEJpd2FTY2hlbWUuQ29yZUVudltGcm9ua2VubWFyay5jdXN0b21UYWdzW3RhZ11dLCBbRnJvbmtlbm1hcmsucHJvY2Vzc0NvbnRlbnQoY29kZSldKQogICAgICB9CiAgICAgIGVsc2V7CiAgICAgICAgcmV0dXJuICJVbnJlY29nbml6ZWQgRnJvbmtlbm1hcmsgdGFnOiAiICsgdGFnICsgIiBmb3IgdGV4dCBibG9jazogIiArIGNvZGU7CiAgICAgIH0KICAgIH0KCiAgfSkKICByZXR1cm4gdGV4dDsKfQoKRnJvbmtlbm1hcmsuZ2VuZXJhdGVEcm9wQ2FwID0gZnVuY3Rpb24obGV0dGVyKXsKICByZXR1cm4gIjxzdmcgdmlld0JveD0nMCAwIDI0MCA4MCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz5cbjxzdHlsZT5cbiAgICAuZHJvcGNhcHsgZm9udC1zaXplOjRlbTt9XG48L3N0eWxlPlxuXG48dGV4dCB4PScwJyB5PSc1MCcgY2xhc3M9J2Ryb3BjYXAnPiIgKyBsZXR0ZXIgKyAiPC90ZXh0PlxuPC9zdmc+XG4iCn0KCi8vIFJvbWFuaXplIGNvdXJ0ZXN5IFN0ZXZlIExldml0aGFuLCBNSVQgbGljZW5zZS4KLy8gaHR0cDovL2Jsb2cuc3RldmVubGV2aXRoYW4uY29tL2FyY2hpdmVzL2phdmFzY3JpcHQtcm9tYW4tbnVtZXJhbC1jb252ZXJ0ZXIKRnJvbmtlbm1hcmsucm9tYW5pemUgPSBmdW5jdGlvbiAobnVtLHVwcGVyKSB7CiAgICB1cHBlciA9IHR5cGVvZiB1cHBlciAhPT0gJ3VuZGVmaW5lZCcgPyB1cHBlciA6IHRydWU7CiAgICBpZiAoK251bSA9PT0gMCkKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB2YXIgICAgZGlnaXRzID0gU3RyaW5nKCtudW0pLnNwbGl0KCIiKSwKICAgICAgICB1cHBlcmtleSA9IFsiIiwiQyIsIkNDIiwiQ0NDIiwiQ0QiLCJEIiwiREMiLCJEQ0MiLCJEQ0NDIiwiQ00iLAogICAgICAgICAgICAgICAiIiwiWCIsIlhYIiwiWFhYIiwiWEwiLCJMIiwiTFgiLCJMWFgiLCJMWFhYIiwiWEMiLAogICAgICAgICAgICAgICAiIiwiSSIsIklJIiwiSUlJIiwiSVYiLCJWIiwiVkkiLCJWSUkiLCJWSUlJIiwiSVgiXSwKICAgICAgICBsb3dlcmtleSA9IFsiIiwiYyIsImNjIiwiY2NjIiwiY2QiLCJkIiwiZGMiLCJkY2MiLCJkY2NjIiwiY20iLAogICAgICAgICAgICAgICAgICAgIiIsIngiLCJ4eCIsInh4eCIsInhsIiwibCIsImx4IiwibHh4IiwibHh4eCIsInhjIiwKICAgICAgICAgICAgICAgICAgICIiLCJpIiwiaWkiLCJpaWkiLCJpdiIsInYiLCJ2aSIsInZpaSIsInZpaWkiLCJpeCJdLAogICAgICAgIHJvbWFuID0gIiIsCiAgICAgICAgaSA9IDM7CiAgICAgICAgdmFyIGtleTsKICAgICAgICBpZih1cHBlciA9PT0gdHJ1ZSl7CiAgICAgICAgICAgIGtleSA9IHVwcGVya2V5OwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAga2V5ID0gbG93ZXJrZXk7CiAgICAgICAgfQogICAgd2hpbGUgKGktLSkKICAgICAgICByb21hbiA9IChrZXlbK2RpZ2l0cy5wb3AoKSArIChpICogMTApXSB8fCAiIikgKyByb21hbjsKICAgIHJldHVybiBBcnJheSgrZGlnaXRzLmpvaW4oIiIpICsgMSkuam9pbigiTSIpICsgcm9tYW47Cn0KCkJpd2FTY2hlbWUuZGVmaW5lX2xpYmZ1bmMoImZyb25rZW5tYXJrIiwzLDMsIGZ1bmN0aW9uKGFyLGludHApewogIEJpd2FTY2hlbWUuYXNzZXJ0X3N0cmluZyhhclswXSk7CiAgdHJ5IHsKICAgIGxldCB0ZXh0PSBGcm9ua2VubWFyay5mcm9ua2VubWFyayhhclswXSxhclsxXSxhclsyXSk7CiAgICBGcm9ua2VubWFyay5yZXNldFN1YnN0aXR1dGlvbnMoKTsKICAgIHJldHVybiB0ZXh0OwogIH0KICBjYXRjaChlKXsKICAgIHJldHVybiBlLnRvU3RyaW5nKCk7CiAgfQp9KTsKCgpCaXdhU2NoZW1lLmRlZmluZV9saWJmdW5jKCJmcm9ua2VubWFyay1nZXQtbm90ZXMiLDAsMCwgZnVuY3Rpb24oYXIsaW50cCl7CiAgQml3YVNjaGVtZS5hc3NlcnRfc3RyaW5nKGFyWzBdKTsKICByZXR1cm4gRnJvbmtlbm1hcmsuZ2V0Tm90ZXMoKTsKfSk7CgpCaXdhU2NoZW1lLmRlZmluZV9saWJmdW5jKCJmcm9ua2VubWFyay1yZXNldC1ub3RlcyIsMCwwLCBmdW5jdGlvbihhcixpbnRwKXsKICBCaXdhU2NoZW1lLmFzc2VydF9zdHJpbmcoYXJbMF0pOwoKICBGcm9ua2VubWFyay5yZXNldE5vdGVzKCk7Cn0pOwo="},"fronkenmark/fronkensteen-scripts.js":{"timestamp":1603739748313,"data":"Ly8gTWFrZSBzdXJlIHdlJ3ZlIGdvdCBhIEZyb25rZW5tYXJrIG9iamVjdCwgcmVnYXJkbGVzcyBvZiBsb2FkIG9yZGVyLgppZih0eXBlb2YgKEZyb25rZW5tYXJrKSA9PT0gInVuZGVmaW5lZCIpewogIEZyb25rZW5tYXJrID0ge307CiAgRnJvbmtlbm1hcmsucHJlU2NyaXB0cyA9IHt9OwogIEZyb25rZW5tYXJrLmN1c3RvbVRhZ3MgPSB7fTsKICBGcm9ua2VubWFyay5zdWJzdGl0dXRpb25zID0ge307Cn0KCkZyb25rZW5tYXJrLnJlc2V0U3Vic3RpdHV0aW9ucyA9IGZ1bmN0aW9uKCl7CiAgRnJvbmtlbm1hcmsuc3Vic3RpdHV0aW9ucyA9IHt9Owp9CgpGcm9ua2VubWFyay5yZXNldENvdW50ZXIgPSBmdW5jdGlvbihjb3VudGVybmFtZSl7CiAgRnJvbmtlbm1hcmsuY291bnRlcnNbY291bnRlcm5hbWVdID0gMDsKfQpGcm9ua2VubWFyay5yZXNldENvdW50ZXJzID0gZnVuY3Rpb24oKXsKICBGcm9ua2VubWFyay5jb3VudGVycyA9IHt9Cn0KRnJvbmtlbm1hcmsucHJlU2NyaXB0c1sibGF0ZXgiXSA9IGZ1bmN0aW9uKGNvZGUsdHJ1c3RlZCl7CiAgLy8gV2UgbGV0IE1hdGhKYXggcnVuIHJlZ2FyZGxlc3Mgb2YgdHJ1c3RlZCBzdGF0dXMuIFRoaW5rIGFib3V0IHRoaXMuCiAgICAgIGxldCBpZCA9ICJyZW5kZXJlZGxhdGV4IiArIEZyb25rZW5zdGVlbi5ub19kYXNoX3V1aWQoKTsKICAgICAgbGV0IHJlc3VsdCA9IE1hdGhKYXgudGV4MnN2Zyhjb2RlLHtkaXNwbGF5OnRydWV9KTsKICAgICAgRnJvbmtlbm1hcmsuc3Vic3RpdHV0aW9uc1tpZF0gPSByZXN1bHQub3V0ZXJIVE1MOwogICAgICByZXR1cm4gaWQ7Cn0KCkZyb25rZW5tYXJrLnByZVNjcmlwdHNbInNjaGVtZSJdID0gZnVuY3Rpb24oY29kZSx0cnVzdGVkKXsKICAvLyBTY2hlbWUgc2hvdWxkIG9ubHkgYmUgYWxsb3dlZCB0byBydW4gb24gdHJ1c3RlZCBpbnB1dC4KICAgaWYodHJ1c3RlZCA9PT0gdHJ1ZSl7CiAgICByZXR1cm4gRnJvbmtlbm1hcmsucHJvY2Vzc1NjaGVtZShjb2RlKTsKICAgfQogICBlbHNlIHsKICAgICByZXR1cm4gIihTY2hlbWUgc2NyaXB0cyBhcmUgbm90IGFsbG93ZWQgaW4gdW50cnVzdGVkIGNvbnRleHRzKSI7CiAgIH0KfQpGcm9ua2VubWFyay5wcmVTY3JpcHRzWyJqYXZhc2NyaXB0Il0gPSBGcm9ua2VubWFyay5wcmVTY3JpcHRzWyJqcyJdID0gZnVuY3Rpb24oY29kZSx0cnVzdGVkKXsKICAvLyBKYXZhc2NyaXB0IHNob3VsZCBvbmx5IGJlIGFsbG93ZWQgdG8gcnVuIG9uIHRydXN0ZWQgaW5wdXQuCiAgICAgaWYodHJ1c3RlZCA9PT0gdHJ1ZSl7CiAgICAgIHJldHVybiBGcm9ua2VubWFyay5wcm9jZXNzSmF2YXNjcmlwdChjb2RlKTsKICAgICB9CiAgICAgZWxzZXsKICAgICAgIHJldHVybiAiKEphdmFTY3JpcHQgaXMgbm90IGFsbG93ZWQgaW4gdW50cnVzdGVkIGNvbnRleHRzKSI7CiAgICAgfQp9CgpGcm9ua2VubWFyay5wcmVTY3JpcHRzWyJpbmNsdWRlIl0gPSBGcm9ua2VubWFyay5wcmVTY3JpcHRzWyJqcyJdID0gZnVuY3Rpb24oY29kZSx0cnVzdGVkKXsKICAvLyBpbmNsdWRlIHNob3VsZCBvbmx5IGJlIGFsbG93ZWQgdG8gcnVuIG9uIHRydXN0ZWQgaW5wdXQuCiAgICAgaWYodHJ1c3RlZCA9PT0gdHJ1ZSl7CiAgICAgIHJldHVybiBGcm9ua2VubWFyay5wcm9jZXNzSW5jbHVkZShjb2RlKTsKICAgICB9CiAgICAgZWxzZXsKICAgICAgIHJldHVybiAiKGluY2x1ZGUgaXMgbm90IGFsbG93ZWQgaW4gdW50cnVzdGVkIGNvbnRleHRzKSI7CiAgICAgfQp9CgpGcm9ua2VubWFyay5wcm9jZXNzSmF2YXNjcmlwdCA9IGZ1bmN0aW9uKGNvZGUpewogIGxldCByZXN1bHQ7CiAgdHJ5ewogICAgICBsZXQganNfZXZhbHVhdG9yID0gbmV3IEZ1bmN0aW9uKGNvZGUpOwogICAgICByZXN1bHQgPSBqc19ldmFsdWF0b3IoKTsKICB9CiAgY2F0Y2goZXJyKXsKICAgIGxldCBtc2cgPSBlcnIudG9TdHJpbmcoKQogICAgcmVzdWx0ID0gIioqKiogRW1iZWRkZWQgSmF2YVNjcmlwdCBlcnJvcjogICIgKyBtc2cgKyAiIGluICBcIiIgKyBjb2RlICsgIlwiICoqKioiOwogIH0KICBpZihyZXN1bHQgPT09IHVuZGVmaW5lZCl7CiAgICByZXN1bHQgPSAiIjsKICB9CiAgcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKHJlc3VsdCk7Cn0KCkZyb25rZW5tYXJrLnByb2Nlc3NTY2hlbWUgPSBmdW5jdGlvbihjb2RlKXsKICBGcm9ua2Vuc3RlZW4uQ3VtdWxhdGl2ZUVycm9ycyA9IFtdOwogIGxldCBleHByID0gRnJvbmtlbnN0ZWVuLnJlbmRlclJFUExUZW1wbGF0ZShjb2RlKTsKICB2YXIgaW50cDIgPSBuZXcgQml3YVNjaGVtZS5JbnRlcnByZXRlcihGcm9ua2Vuc3RlZW4uc2NoZW1lX2ludGVwcmV0ZXIpOwogIGxldCByZXN1bHQgPSBpbnRwMi5ldmFsdWF0ZShleHByKTsKICBpZihGcm9ua2Vuc3RlZW4uQ3VtdWxhdGl2ZUVycm9ycy5sZW5ndGggIT09IDApewogICAgbGV0IG1zZyA9IEZyb25rZW5zdGVlbi5DdW11bGF0aXZlRXJyb3JzLmpvaW4oIlxuIik7CiAgICBjb25zb2xlLmVycm9yKG1zZyk7CiAgICBGcm9ua2Vuc3RlZW4uQ3VtdWxhdGl2ZUVycm9ycyA9IFtdOwogICAgcmVzdWx0ID0gIioqKiogRW1iZWRkZWQgU2NoZW1lIGVycm9yICIgKyBtc2cgKyAiIGluICBcIiIgKyBleHByICsgIlwiICoqKioiOwogIH0KICBpZihyZXN1bHQgPT09IEJpd2FTY2hlbWUudW5kZWYpewogICAgcmVzdWx0ID0gIiIKICB9CiAgcmV0dXJuIEZyb25rZW5tYXJrLmluc3RhbGxTdWJzdGl0dXRlKHJlc3VsdCk7Cn0KCkZyb25rZW5tYXJrLnByb2Nlc3NJbmNsdWRlID0gZnVuY3Rpb24oY29kZSl7CiAgcGFnZW5hbWUgPSBjb2RlLnRyaW0oKTsKICBsZXQgZmlsZW5hbWUgPSAidXNlci1maWxlcy93aWtpLyIgKyAgZW5jb2RlVVJJKHBhZ2VuYW1lKSArICAiLmZtayI7CiAgaWYoRnJvbmtlbnN0ZWVuLmZpbGVFeGlzdHMoZmlsZW5hbWUpKXsKICAgIHJldHVybiBGcm9ua2VubWFyay5mcm9ua2VubWFyayhGcm9ua2Vuc3RlZW4ucmVhZEludGVybmFsVGV4dEZpbGUoZmlsZW5hbWUpLHRydWUpOwogIH0KICBlbHNlewogICAgcmV0dXJuICJJbmNsdWRlZCBmaWxlICIgKyBwYWdlbmFtZSArICIgZG9lcyBub3QgZXhpc3QuIgogIH0KfQoKRnJvbmtlbm1hcmsuaGlnaGxpZ2h0ZXIgPSBmdW5jdGlvbihjb2RlKXsKICBpZihGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2UgIT09ICIiKXsKICAgIGlmKFByaXNtLmxhbmd1YWdlc1tGcm9ua2VubWFyay5jdXJyZW50TGFuZ3VhZ2VdICE9PSB1bmRlZmluZWQpewogICAgICByZXR1cm4gUHJpc20uaGlnaGxpZ2h0KGNvZGUsUHJpc20ubGFuZ3VhZ2VzW0Zyb25rZW5tYXJrLmN1cnJlbnRMYW5ndWFnZV0sRnJvbmtlbm1hcmsuY3VycmVudExhbmd1YWdlKTsKICAgIH0KICB9CiAgcmV0dXJuIFByaXNtLmhpZ2hsaWdodChjb2RlLCJzY2hlbWUiLCAic2NoZW1lIik7Cn0KCgoKLy8gSGF0IHRpcDogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vcm9kcmlnb2Jvcmdlc2Rlb2xpdmVpcmEvOTg3NjgzY2ZiZmNjOGQ4MDAxOTJkYTFlNzNhZGM0ODYKCkZyb25rZW5tYXJrLnBhcnNlWW91VHViZVVSTCA9IGZ1bmN0aW9uKHVybCl7CiAgbGV0IG1hdGNoID0gdXJsLm1hdGNoKC8oXC98JTNEfHY9KShbMC05QS16LV9dezExfSkoWyUjPyZdfCQpLyk7CiAgaWYobWF0Y2ggPT09IG51bGwpewogICAgY29uc29sZS5sb2coIlVucmVjb2duaXplZCBZb3VUdWJlIFVSTDogIiArIHVybCk7CiAgICByZXR1cm4gIiIKICB9CiAgcmV0dXJuIG1hdGNoWzJdOwp9CgpGcm9ua2VubWFyay5jdXN0b21UYWdzWyJ5b3V0dWJlIl0gPSAieW91dHViZSI7CgpCaXdhU2NoZW1lLmRlZmluZV9saWJmdW5jKCJ5b3V0dWJlIiwxLDEsZnVuY3Rpb24oYXIsaW50cCl7CiAgQml3YVNjaGVtZS5hc3NlcnRfc3RyaW5nKGFyWzBdKTsKICBsZXQgcGFydHMgPSBhclswXS5zcGxpdCgiICIpOwogIGlmKHBhcnRzLmxlbmd0aCA9PSAxKXsKICAgcGFydHMucHVzaCgiYXV0byIpOwogICBwYXJ0cy5wdXNoKCJhdXRvIik7CiAgfQoKICByZXR1cm4gIjxpZnJhbWUgd2lkdGg9JyIgKyBwYXJ0c1sxXSArICInIGhlaWdodD0nIiArIHBhcnRzWzJdICsgIicgc3JjPSdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8iICsgRnJvbmtlbm1hcmsucGFyc2VZb3VUdWJlVVJMKHBhcnRzWzBdKSArICInIGZyYW1lYm9yZGVyPScwJyBhbGxvdz0nYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZScgYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPiIKCn0pCg=="}}