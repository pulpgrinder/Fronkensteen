[large All Files large]
[!scheme

(define (.af-trash-file-button_touch_click evt)
  (let ((target (js-ref evt "currentTarget")))
    (let ((filename (element-read-attribute target "filename")))
      (trash-internal-file filename)
      (alert (<< filename ": moved to trash"))
      (% "#af-file-list" "html" (render-all-files))
      )))

(define (.af-edit-file-button_touch_click evt)
  (let ((target (js-ref evt "currentTarget")))
    (let ((filename (element-read-attribute target "filename")))
        (display-code-editor-page filename)
      )))

(define (render-all-files)
  (let ((all-files (vector->list (natural-sort (get-internal-dir "") #f #f))))
    (render-all-files-rec all-files)))

(define (render-all-files-rec file-list)
    (if (eqv? file-list '())
      ""
      (let ((result (car file-list)))
      (<<  (round-list-item  "" (<< (decode-uri  result) "&nbsp;&nbsp;" (button (<< ".af-edit-file-button!filename='" result "'") (fa-icon "" "edit" "")) "&nbsp;&nbsp;" (button (<< ".af-trash-file-button!filename='" result "'") (fa-icon "" "trash" ""))))  (render-all-files-rec (cdr file-list))))))

(round-list "#af-file-list" (render-all-files))

scheme!]
